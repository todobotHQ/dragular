!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var r in t)("object"==typeof exports?exports:e)[r]=t[r]}}(this,function(){return function(e){function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";var r=t(1);angular.module("examplesApp",[r,"templates","ui.router"]);var o=t(4),i=t(5),l=t(6),a=t(7),c=t(8),s=t(9),d=t(10),m=t(11),u=t(12),p=t(13),v=t(14),g=t(15),h=t(16),f=t(17),b=t(18),x=t(19),y=t(20),I=t(21),w=t(22),$=t(23),S=t(24),M=t(25),C=t(26),q=t(27),B=t(28),E=t(29),k=t(30);t(31),angular.module("examplesApp").config(o).controller("Basic",i).controller("BasicModel",l).controller("BoundingBox",a).controller("BoundingBoxLockX",c).controller("BoundingBoxLockY",s).controller("Copy",d).controller("CopyModel",m).controller("CustomClasses",u).controller("DifferentOptionsModel",p).controller("Directive",v).controller("DirectiveModel",g).controller("DragOverEvents",h).controller("Events",f[0]).controller("Events2",f[1]).controller("Handle",b).controller("IsContainerModel",x).controller("NameSpaces",y).controller("NestedNgRepeat",I).controller("NestedNgRepeatWithModel",w).controller("NgRepeat",$).controller("NgRepeatFilteredWithModel",S).controller("NgRepeatWithModel",M).controller("RemoveOnSpill",C).controller("RemoveOnSpillWithModel",q).controller("RevertOnSpill",B).controller("ScrollingDrag",E).controller("NestedRepeatsWithCustomDirective",k).controller("ExAppCtrl",["$scope",function(e){e.examplesList=[{template:"docsInstall/docsInstall.html",link:"docsInstall",title:"Installation"},{template:"exampleBasic/exampleBasic.html",link:"exampleBasic",title:"Basic"},{template:"exampleBasicWithModel/exampleBasicWithModel.html",link:"exampleBasicWithModel",title:"Basic - with model"},{template:"exampleDifferentOptionsWithModel/exampleDifferentOptionsWithModel.html",link:"exampleDifferentOptionsWithModel",title:"Different options - with model"},{template:"exampleDirective/exampleDirective.html",link:"exampleDirective",title:"Directive"},{template:"exampleDirectiveWithModel/exampleDirectiveWithModel.html",link:"exampleDirectiveWithModel",title:"Directive - with model"},{template:"exampleEvents/exampleEvents.html",link:"exampleEvents",title:"Events"},{template:"exampleRemoveOnSpill/exampleRemoveOnSpill.html",link:"exampleRemoveOnSpill",title:"Remove on spill"},{template:"exampleRemoveOnSpillWithModel/exampleRemoveOnSpillWithModel.html",link:"exampleRemoveOnSpillWithModel",title:"Remove on spill - with model"},{template:"exampleRevertOnSpill/exampleRevertOnSpill.html",link:"exampleRevertOnSpill",title:"Revert on spill"},{template:"exampleCopy/exampleCopy.html",link:"exampleCopy",title:"Copy"},{template:"exampleCopyWithModel/exampleCopyWithModel.html",link:"exampleCopyWithModel",title:"Copy - with model"},{template:"exampleHandle/exampleHandle.html",link:"exampleHandle",title:"Handle"},{template:"exampleIsContainerWithModel/exampleIsContainerWithModel.html",link:"exampleIsContainerWithModel",title:"isContainer - with model"},{template:"exampleCustomClasses/exampleCustomClasses.html",link:"exampleCustomClasses",title:"Custom classes"},{template:"exampleNameSpaces/exampleNameSpaces.html",link:"exampleNameSpaces",title:"NameSpaces"},{template:"exampleDragOverEvents/exampleDragOverEvents.html",link:"exampleDragOverEvents",title:"Drag-over events"},{template:"exampleBoundingBox/exampleBoundingBox.html",link:"exampleBoundingBox",title:"BoundingBox"},{template:"exampleBoundingBoxLockX/exampleBoundingBoxLockX.html",link:"exampleBoundingBoxLockX",title:"BoundingBox + LockX"},{template:"exampleBoundingBoxLockY/exampleBoundingBoxLockY.html",link:"exampleBoundingBoxLockY",title:"BoundingBox + LockY"},{template:"exampleNgRepeat/exampleNgRepeat.html",link:"exampleNgRepeat",title:"ngRepeat"},{template:"exampleNgRepeatWithModel/exampleNgRepeatWithModel.html",link:"exampleNgRepeatWithModel",title:"ngRepeat - with model"},{template:"exampleNgRepeatFilteredWithModel/exampleNgRepeatFilteredWithModel.html",link:"exampleNgRepeatFilteredWithModel",title:"Filtered ngRepeat - with model"},{template:"exampleNestedNgRepeat/exampleNestedNgRepeat.html",link:"exampleNestedNgRepeat",title:"Nested ngRepead"},{template:"exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.html",link:"exampleNestedNgRepeatWithModel",title:"Nested ngRepead - with model"},{template:"exampleScrollingDrag/exampleScrollingDrag.html",link:"exampleScrollingDrag",title:"Scrolling drag"},{template:"exampleSNestedRepeatsWithCustomDirective/exampleNestedRepeatsWithCustomDirective.html",link:"exampleNestedRepeatsWithCustomDirective",title:"Nested repeats with custom directive"}],e.highlightCode=function(){if(document.getElementsByTagName("code").length)for(var e=document.getElementsByTagName("code"),n=e.length-1;n>=0;n--)hljs.highlightBlock(e[n])};var n;e.toggleSidebar=function(){n||(n=angular.element(document.getElementById("rowOffcanvas"))),n.toggleClass("active")}}])},function(e,n,t){"use strict";var r=t(2),o=t(3);e.exports="dragularModule",angular.module("dragularModule",[]).factory("dragularService",o).directive("dragular",r)},function(e,n){"use strict";var t=function(e){return{restrict:"A",link:function(n,t,r){function o(e){try{return JSON.parse(e)}catch(n){return}}var i=n.$eval(r.dragular)||o(r.dragular)||{};r.dragularModel&&(i.containersModel=r.dragularModel,i.scope||(i.scope=n)),r.dragularNameSpace&&(i.nameSpace=r.dragularNameSpace.split(" ")),r.dragularOnInit&&(i.onInit=n.$eval(r.dragularOnInit)),e(t[0],i)}}};t.$inject=["dragularService"],e.exports=t},function(e,n){"use strict";var t={classesCache:{},containersCtx:{},containers:{},mirror:null,source:null,item:null,copy:null,sourceItem:null,sourceModel:null,sourceFilteredModel:null,target:null,targetCtx:null,targetModel:null,lastDropTarget:null,offsetX:null,offsetY:null,moveX:null,moveY:null,offsetXr:null,offsetYb:null,clientX:null,clientY:null,mirrorWidth:null,mirrorHeight:null,initialSibling:null,currentSibling:null,initialIndex:null,currentIndex:null,tempModel:null,dragOverEvents:{},lastElementBehindCursor:null,grabbed:null},r=function(e,n){function r(r,m){function b(){1!==arguments.length||N(r)||angular.isElement(r)||r[0]||"string"==typeof r?"string"==typeof r&&(pe=document.querySelectorAll(r)):(ve=r||{},pe=[]),ue=ve.copyOptions?angular.copy(ve):ve}function I(){var e=angular.extend({},be,ue);angular.extend(ue,e),ue.classes&&(e=angular.extend({},he,ue.classes),angular.extend(ue.classes,e)),ue.eventNames&&(e=angular.extend({},fe,ue.eventNames),angular.extend(ue.eventNames,e))}function M(){f(ue.boundingBox)||(ue.boundingBox=!1),ue.containers&&(pe=ue.containers),ue.containers=o(pe,!1,ue.scope),ue.containersModel=o(ue.containersModel,!0,ue.scope),N(ue.containersFilteredModel)?ue.containersFilteredModel=N(ue.containersFilteredModel[0])?ue.containersFilteredModel:[ue.containersFilteredModel]:ue.containersFilteredModel=[],ue.nameSpace||(ue.nameSpace=["dragularCommon"]),N(ue.nameSpace)||(ue.nameSpace=[ue.nameSpace]),ue.nameSpace.forEach(function(e){t.containers[e]||(t.containers[e]=[],t.containersCtx[e]=[]);for(var n,r=Z(ue).length,o=0;o<r;o++){if(n=Z(ue)[o],!n)throw new Error("Container element must be defined!");if(t.containers[e].indexOf(n)!==-1)throw new Error("Cannot register container element more than once! Container element: ");t.containers[e].push(n),t.containersCtx[e].push({o:ue,m:ee(ue)[o],fm:ue.containersFilteredModel[o]})}})}function O(e){var n=e?"off":"on";i(k,n,"mouseup",re),Z(ue).forEach(function(e){i(e,"on","mousedown",D)}),e||angular.forEach(["dragularenter","dragularleave","dragularrelease"],function(e){var n=ue.eventNames[e];t.dragOverEvents[n]||(E.createEvent?(t.dragOverEvents[n]=E.createEvent("HTMLEvents"),t.dragOverEvents[n].initEvent(n,!0,!0)):(t.dragOverEvents[n]=E.createEventObject(),t.dragOverEvents[n].eventType=n))})}function D(e){if(1===s(e)&&!e.metaKey&&!e.ctrlKey){t.moveX=e.clientX,t.moveY=e.clientY;var n=Y(e.target);n&&n.item&&(t.grabbed=n,j(),"mousedown"===e.type&&(S(e.target)?e.target.focus():e.preventDefault()))}}function j(e){var n=e?"off":"on";i(k,n,"mousemove",T)}function T(e){if(t.grabbed&&!xe.dragging){if(e.originalEvent&&(e=e.originalEvent),0===s(e))return void re({});if(!e.clientX||e.clientX!==t.moveX||!e.clientY||e.clientY!==t.moveY){if(ge(ue.ignoreInputTextSelection)){var n=w("clientX",e),r=w("clientY",e),o=E.elementFromPoint(n,r);if(S(o))return}var i=t.grabbed;if(j("remove"),V(),X(),W(i),t.item){if(!ue.direction&&$(t.sourceItem)){var l=t.sourceItem.parentNode,a=l.offsetHeight,c=l.offsetWidth,d=t.sourceItem.clientHeight,m=t.sourceItem.clientWidth;ue.direction=a/d<c/m?"horizontal":"vertical"}var p=u(t.sourceItem);t.offsetX=w("pageX",e)-p.left,t.offsetY=w("pageY",e)-p.top,t.clientX=w("clientX",e),t.clientY=w("clientY",e),ue.boundingBox&&(t.offsetXr=w("pageX",e)-p.right,t.offsetYb=w("pageY",e)-p.bottom),e.preventDefault(),F(),x(t.item,ue.classes.transit),t.mirror.style.left=t.clientX-t.offsetX+"px",t.mirror.style.top=t.clientY-t.offsetY+"px",H(e)}}}}function V(e){var n=e?"off":"on";i(k,n,"selectstart",d),i(k,n,"click",d),i(k,n,"touchmove",d)}function Y(e){if(!xe.dragging||!t.mirror){for(var n=e;$(e)&&!K($(e));){if(ue.invalid(e,n))return;if(e=$(e),!e)return}var r=$(e);if(r&&!ue.invalid(e,n)&&ue.moves(e,r,n,h(e)))return{item:e,source:r}}}function W(e){t.sourceItem=t.item=e.item,t.source=e.source,t.initialSibling=t.currentSibling=h(e.item),ge(ue.copy,[e.item,e.source])?(t.item=e.item.cloneNode(!0),t.copy=!0,ue.scope&&ue.scope.$emit(ue.eventNames.dragularcloned,t.item,e.item)):t.copy=!1;var n=Z(ue).indexOf(e.source);return t.sourceModel=ee(ue)[n],t.sourceFilteredModel=ue.containersFilteredModel[n],t.initialIndex=C(e.item,e.source),xe.dragging=!0,ue.scope&&ue.scope.$emit(ue.eventNames.dragulardrag,t.sourceItem,t.source),!0}function L(e){var n=Y(e);n&&(t.grabbed=n,j())}function F(){if(!t.mirror){var e=t.sourceItem.getBoundingClientRect();t.mirror=t.sourceItem.cloneNode(!0),t.mirrorWidth=e.width,t.mirrorHeight=e.height,t.mirror.style.width=p(e)+"px",t.mirror.style.height=v(e)+"px",x(t.mirror,ue.classes.mirror),ue.mirrorContainer.appendChild(t.mirror),i(k,"on","mousemove",H),x(E.body,ue.classes.unselectable),i(t.mirror,"on","wheel",se),ue.scope&&ue.scope.$emit(ue.eventNames.dragularcloned,t.mirror,t.sourceItem)}}function X(){xe.dragging&&t.item&&oe(t.item,$(t.item))}function A(){t.grabbed=!1,j("remove"),V("remove")}function H(e){function n(n){function r(r){r.$emit(ue.eventNames["dragular"+n],t.item,t.lastDropTarget,t.source,e)}ue.scope&&r(ue.scope),t.targetCtx&&t.targetCtx.o.scope&&t.targetCtx.o.scope!==ue.scope&&r(t.targetCtx.o.scope),ge(ue.removeOnSpill)===!0&&("over"===n?J():z())}if(t.mirror){e.originalEvent&&(e=e.originalEvent),t.clientX=w("clientX",e),t.clientY=w("clientY",e);var r,o,i,l=t.clientX-t.offsetX,a=t.clientY-t.offsetY;ue.boundingBox&&(r=w("pageX",e),o=w("pageY",e),i=u(ue.boundingBox)),ue.lockY||(!ue.boundingBox||r>i.left+t.offsetX&&r<i.right+t.offsetXr?t.mirror.style.left=l+"px":ue.boundingBox&&(r<i.left+t.offsetX?t.mirror.style.left=t.clientX-(r-i.left)+"px":t.mirror.style.left=t.clientX-t.mirrorWidth-(r-i.right)+"px")),ue.lockX||(!ue.boundingBox||o>i.top+t.offsetY&&o<i.bottom+t.offsetYb?t.mirror.style.top=a+"px":ue.boundingBox&&(o<i.top+t.offsetY?t.mirror.style.top=t.clientY-(o-i.top)+"px":t.mirror.style.top=t.clientY-t.mirrorHeight-(o-i.bottom)+"px"));var c=_(t.mirror,t.clientX,t.clientY),s=P(c,t.clientX,t.clientY),d=s!==t.lastDropTarget;if(c!==t.lastElementBehindCursor&&(q(c,t.dragOverEvents.dragularenter,!!s),t.lastElementBehindCursor&&q(t.lastElementBehindCursor,t.dragOverEvents.dragularleave,c),t.lastElementBehindCursor=c),d&&(t.lastDropTarget&&n("out"),t.lastDropTarget=s,n("over")),s===t.source&&t.copy&&!ge(ue.copySortSource))return void($(t.item)&&t.item.parentNode.removeChild(t.item));var m,p=Q(s,c);if(null!==p)m=G(s,p,t.clientX,t.clientY);else{if(ge(ue.revertOnSpill)!==!0||t.copy)return void(t.copy&&$(t.item)&&t.item.parentNode.removeChild(t.item));m=t.initialSibling,s=t.source}(null===m||m!==t.item&&m!==h(t.item)&&m!==t.currentSibling)&&(t.currentSibling=m,s.insertBefore(t.item,m),ue.scope&&ue.scope.$emit(ue.eventNames.dragularshadow,t.item,s,e))}}function P(e,n,r){function o(){if(!K(l))return!1;for(var o,c=Q(l,e),s=G(l,c,n,r),d=U(l,s),m=ue.nameSpace.length;m--;)if(o=ue.nameSpace[m],t.containers[o].indexOf(l)!==-1){a=i(o);break}return t.target=l,!!d||(a||(a=i("dragularCommon")),a&&R(a.o.containersModel)&&(a.m=ee(a.o)[Z(a.o).indexOf(l)]),!(a&&a.o.accepts&&!a.o.accepts(t.item,l,t.source,s,t.sourceModel,t.initialIndex))&&(!(ue.isContainer&&ue.isContainerAccepts&&!ue.isContainerAccepts(t.item,l,t.source,s,t.sourceModel,t.initialIndex))&&(!ue.canBeAccepted||ue.canBeAccepted(t.item,l,t.source,s,t.sourceModel,t.initialIndex))))}function i(e){return t.containersCtx[e]&&t.containersCtx[e][t.containers[e].indexOf(l)]}for(var l=e,a=null;l&&!o();)l=$(l);return l&&a&&(t.targetCtx=a),l}function J(){y(t.item,ue.classes.hide)}function z(){xe.dragging&&x(t.item,ue.classes.hide)}function U(e,n){var r=void 0!==n?n:t.mirror?t.currentSibling:h(t.item);return e===t.source&&r===t.initialSibling}function Q(e,n){for(var t=n;t!==e&&$(t)!==e;)t=$(t);return t===k?null:t}function G(e,n,t,r){function o(){var n,o,i,l=e.children.length;for(n=0;n<l;n++){if(o=e.children[n],i=o.getBoundingClientRect(),a&&i.left>t)return o;if(!a&&i.top>r)return o}return null}function i(){var e=n.getBoundingClientRect();return l(a?t>e.left+p(e)/2:r>e.top+v(e)/2)}function l(e){return e?h(n):n}var a="horizontal"===ue.direction;return n!==e?i():o()}function _(e,n,t){var r,o=e||{},i=o.className;return o.className+=" "+ue.classes.hide,r=E.elementFromPoint(n,t),o.className=i,r}function K(e){if(!e)return!1;for(var n=ue.nameSpace.length;n--;)if(t.containers[ue.nameSpace[n]].indexOf(e)!==-1)return!0;return ue.isContainer(e)?(t.tempModel=ue.isContainerModel(e),!0):(t.tempModel=null,!1)}function Z(e){return ne("containers",e)}function ee(e){return ne("containersModel",e,!0)}function ne(e,n,r){return R(n[e])?o(n[e](n===ue?xe:null,t),r,n.scope):n[e]}function te(e){if(xe.dragging){var n=arguments.length>0?e:ge(ue.revertOnSpill),r=$(t.item),o=U(r);o||t.copy||!n||t.source.insertBefore(t.item,t.initialSibling),!t.sourceModel||t.copy||n?ue.scope&&(o||n)&&ue.scope.$emit(ue.eventNames.dragularcancel,t.item,t.source,t.sourceModel,t.initialIndex):oe(t.item,r),(!t.sourceModel||t.copy||n||o)&&le()}}function re(e){if(A(),xe.dragging){e.originalEvent&&(e=e.originalEvent),t.clientX=w("clientX",e),t.clientY=w("clientY",e);var n=_(t.mirror,t.clientX,t.clientY),r=P(n,t.clientX,t.clientY);r&&(t.copy&&ge(ue.copySortSource)||!t.copy||r!==t.source)?oe(t.item,r):ge(ue.removeOnSpill)?ie():te(),t.target=null,t.lastElementBehindCursor&&q(t.lastElementBehindCursor,t.dragOverEvents.dragularrelease,n),ue.scope&&ue.scope.$emit(ue.eventNames.dragularrelease,t.item,t.source,e)}}function oe(r,o){function l(){function e(e){U(o)?e.$emit(ue.eventNames.dragularcancel,r,t.source,t.sourceModel,t.initialIndex):e.$emit(ue.eventNames.dragulardrop,r,o,t.source,t.sourceModel,t.initialIndex,t.targetModel,s)}if(Z(ue).forEach(function(e){i(e,"off","mousedown",D),i(e,"on","mousedown",D)}),ue.compileItemOnDrop){var l=angular.element(o).scope?angular.element(o).scope():ue.scope;l&&l.$applyAsync(function(){var e=n(t.copy?a.cloneNode(!0):a)(l);r.parentNode===o&&o.removeChild(r),o.insertBefore(e[0],c),le()})}ue.scope&&e(ue.scope),t.targetCtx&&t.targetCtx.o.scope&&t.targetCtx.o.scope!==ue.scope&&e(t.targetCtx.o.scope),ue.compileItemOnDrop||le()}if(!r)return void le();var a=t.sourceItem,c=t.currentSibling,s=C(r,o);t.copy&&o===t.source&&$(r)&&ge(ue.copySortSource)&&r.parentNode.removeChild(t.sourceItem),t.sourceModel&&!U(o)?(t.targetCtx&&t.targetCtx.fm&&(s=t.targetCtx.m.indexOf(t.targetCtx.fm[s])),t.sourceFilteredModel&&(t.initialIndex=t.sourceModel.indexOf(t.sourceFilteredModel[t.initialIndex])),e.$applyAsync(function(){t.sourceModel&&(o===t.source?t.sourceModel.splice(s,0,t.sourceModel.splice(t.initialIndex,1)[0]):(t.dropElmModel=t.copy&&!ue.dontCopyModel?angular.copy(t.sourceModel[t.initialIndex]):t.sourceModel[t.initialIndex],t.tempModel?t.targetModel=t.tempModel:t.targetModel=t.targetCtx&&t.targetCtx.m||t.sourceModel,r.parentNode.removeChild(r),t.copy||t.sourceModel.splice(t.initialIndex,1),t.targetModel&&t.targetModel.splice(s,0,t.dropElmModel)),$(r)&&r.parentNode.removeChild(r),l())})):l()}function ie(){if(xe.dragging){var n=$(t.item);n&&n.removeChild(t.item),t.sourceModel&&e.$applyAsync(function(){t.sourceModel.splice(t.initialIndex,1),le()}),ue.scope&&ue.scope.$emit(t.copy?ue.eventNames.dragularcancel:ue.eventNames.dragularremove,t.item,n,t.sourceModel,t.initialIndex),t.sourceModel||le()}}function le(){A(),de(),t.item&&y(t.item,ue.classes.transit),xe.dragging=!1,ge(ue.removeOnSpill)===!0&&z(),ue.scope&&(t.lastDropTarget&&ue.scope.$emit(ue.eventNames.dragularout,t.item,t.lastDropTarget,t.source),ue.scope.$emit(ue.eventNames.dragulardragend,t.item)),t.source=t.item=t.sourceItem=t.initialSibling=t.currentSibling=t.sourceModel=null,t.initialIndex=t.currentIndex=t.lastDropTarget=t.tempModel=t.targetModel=null,t.dropElmModel=t.targetCtx=t.copy=t.moveX=t.moveY=null}function ae(){O(!0),ce(ue.containers),re({})}function ce(n){e.$applyAsync(function(){var e=N(n)?n:c(n);e.forEach(function(e){angular.forEach(ue.nameSpace,function(n){var r;r=t.containers[n].indexOf(e),t.containers[n].splice(r,1),t.containersCtx[n].splice(r,1)})})})}function se(e){if(t.target){e.originalEvent&&(e=e.originalEvent);var n=t.target.scrollTop;t.target.scrollTop+=e.deltaY,n!==t.target.scrollTop&&(e.stopPropagation(),e.preventDefault())}}function de(){t.mirror&&(y(E.body,ue.classes.unselectable),i(k,"off","mousemove",H),i(t.mirror,"off","wheel",se),$(t.mirror)&&t.mirror.parentNode.removeChild(t.mirror),t.mirror=null)}function me(e){o(e,!0,ue.scope)}var ue,pe=r||[],ve=m||{},ge=B,he={mirror:"gu-mirror",hide:"gu-hide",unselectable:"gu-unselectable",transit:"gu-transit"},fe={dragularenter:"dragularenter",dragularleave:"dragularleave",dragularrelease:"dragularrelease",dragularcloned:"dragularcloned",dragulardrag:"dragulardrag",dragularcancel:"dragularcancel",dragulardrop:"dragulardrop",dragularremove:"dragularremove",dragulardragend:"dragulardragend",dragularshadow:"dragularshadow",dragularover:"dragularover",dragularout:"dragularout"},be={copyOptions:!1,classes:he,eventNames:fe,containers:!1,containersModel:!1,containersFilteredModel:!1,isContainer:l,isContainerModel:g,isContainerAccepts:a,moves:a,accepts:a,canBeAccepted:a,copy:!1,copySortSource:!1,dontCopyModel:!1,invalid:l,revertOnSpill:!1,removeOnSpill:!1,lockX:!1,lockY:!1,boundingBox:!1,mirrorContainer:E.body,ignoreInputTextSelection:!0,compileItemOnDrop:!1,onInit:!1},xe={containers:t.containers,containersCtx:t.containersCtx,sanitizeContainersModel:me,sanitizeContainers:o,isContainer:K,start:L,end:X,cancel:te,remove:ie,destroy:ae,dragging:!1,registerEvents:O};return b(),I(),M(),O(),ue.onInit&&ue.onInit(xe,ue),xe}function o(e,n,t){if(R(e))return e;if(N(e))return n?N(e[0])?e:[e]:e;if("string"==typeof e&&t){var r=t.$eval(e);return R(r)?r:function(){return t.$eval(e)}}return e?c(e):[]}function i(e,n,t,r){var o={mouseup:"touchend",mousedown:"touchstart",mousemove:"touchmove"},i={mouseup:"pointerup",mousedown:"pointerdown",mousemove:"pointermove"},l={mouseup:"MSPointerUp",mousedown:"MSPointerDown",mousemove:"MSPointerMove"},a=angular.element(e);if(e.addEventListener){var c={on:"addEventListener",off:"removeEventListener"};e[c[n]](t,r,{passive:!1}),e[c[n]](o[t],r,{passive:!1})}else"undefined"!=typeof navigator&&navigator.pointerEnabled&&i[t]?a[n](i[t],r):"undefined"!=typeof navigator&&navigator.msPointerEnabled&&l[t]?a[n](l[t],r):o[t]&&a[n](o[t],r),a[n](t,r)}function l(){return!1}function a(){return!0}function c(e,n){return N(e)?e:e.length?Array.prototype.slice.call(e,n):[e]}function s(e){if(e.touches)return e.touches.length;if(e.originalEvent&&e.originalEvent.touches)return e.originalEvent.touches.length;if(void 0!==e.which&&0!==e.which)return e.which;if(void 0!==e.buttons)return e.buttons;var n=e.button;return void 0!==n?1&n?1:2&n?3:4&n?2:0:void 0}function d(e){e.originalEvent&&(e=e.originalEvent),t.grabbed&&e.preventDefault()}function m(e,n){return"undefined"!=typeof window[n]?window[n]:k.clientHeight?k[e]:E.body[e]}function u(e){var n=e.getBoundingClientRect(),t=m("scrollTop","pageYOffset"),r=m("scrollLeft","pageXOffset");return{left:n.left+r,right:n.right+r,top:n.top+t,bottom:n.bottom+t}}function p(e){return e.width||e.right-e.left}function v(e){return e.height||e.bottom-e.top}function g(){return[]}function h(e){function n(){var n=e;do n=n.nextSibling;while(n&&1!==n.nodeType);return n}if(e)return e.nextElementSibling||n()}function f(e){return"object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&null!==e&&1===e.nodeType&&"string"==typeof e.nodeName}function b(e){var n=t.classesCache[e];return n?n.lastIndex=0:t.classesCache[e]=n=new RegExp("(?:^|\\s)"+e+"(?:\\s|$)","g"),n}function x(e,n){var t=e.className;t.length?b(n).test(t)||(e.className+=" "+n):e.className=n}function y(e,n){e.className=e.className.replace(b(n)," ").trim()}function I(e){return e.targetTouches&&e.targetTouches.length?e.targetTouches[0]:e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e}function w(e,n){var t=I(n),r={pageX:"clientX",pageY:"clientY"};return e in r&&!(e in t)&&r[e]in t&&(e=r[e]),!t.type||t.type.indexOf("touch")<0?t[e]:t.type.indexOf("end")===-1&&t.originalEvent.touches[0][e.replace("client","page")]}function $(e){return e.parentNode===document?null:e.parentNode}function S(e){return"INPUT"===e.tagName||"TEXTAREA"===e.tagName||"SELECT"===e.tagName||M(e)}function M(e){return!!e&&("false"!==e.contentEditable&&("true"===e.contentEditable||M($(e))))}function C(e,n){return Array.prototype.indexOf.call(angular.element(n).children(),e)}function q(e,n,r){e&&(t.extra=r,e.dispatchEvent?e.dispatchEvent(n):e.fireEvent("on"+n.eventType,n))}function B(e,n,r){return R(e)?!!e.apply(r||this,n||t):!!e}var E=document,k=E.documentElement,N=Array.isArray,R=angular.isFunction;return r.cleanEnviroment=function(){t.classesCache={},t.containersCtx={},t.containers={},t.mirror=void 0},r.shared=t,r};r.$inject=["$rootScope","$compile"],e.exports=r},function(e,n){"use strict";var t=function(e,n){n.otherwise("/home");var t,r=function(e,n,r){n.link?r.cancel(t):t=r(function(){e.go("docs.detail",{link:"docsInstall"})},0)};r.$inject=["$state","$stateParams","$timeout"],e.state("home",{url:"/home",templateUrl:"partials/partial-home.html"}).state("docs",{url:"/docs",templateUrl:"partials/partial-docs.html",controller:r}).state("docs.detail",{url:"/:link",templateUrl:function(e){return e.link+"/"+e.link+".html"},controller:r}).state("contribute",{url:"/contribute",templateUrl:"partials/partial-contribute.html"})};t.$inject=["$stateProvider","$urlRouterProvider"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(".containerVertical")};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){e.items1=[{content:"Move me, but you can only drop me in one of these containers."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var r=n.children().eq(0).children();t.cleanEnviroment(),t([r[0],r[1]],{containersModel:[e.items1,e.items2]})};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){var t=e[0];n.cleanEnviroment(),n(e.children(),{boundingBox:t})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){var t=e.children().children()[0];n.cleanEnviroment(),n(t,{boundingBox:t,lockX:!0})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){var t=e.children().children()[0];n.cleanEnviroment(),n(t,{boundingBox:t,lockY:!0})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(e.children(),{copy:!0})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){e.items1=[{content:"Move me, and make copy on drop."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var r=n.children().eq(0).children();t.cleanEnviroment(),t([r[0],r[1]],{containersModel:[e.items1,e.items2],copy:!0})};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(e.children(),{classes:{mirror:"custom-green-mirror"}})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){function r(e,n,t){if(t===o||t===n)return!0}e.items1=[{content:"Move me, but you can only drop me in one of these containers."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var o=document.querySelector("#containerLeft"),i=document.querySelector("#containerRight");t.cleanEnviroment(),t([o],{containersModel:[e.items1],copy:!0,copySortSource:!0,accepts:r}),t([i],{containersModel:[e.items2],removeOnSpill:!0,accepts:r})};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e){e.dragularOptions={classes:{mirror:"custom-green-mirror"},nameSpace:"same"}};t.$inject=["$scope"],e.exports=t},function(e,n){"use strict";var t=function(e){e.items1=[{content:"Move me, and make copy on drop."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}],e.dragularOptions={containersModel:e.items1,classes:{mirror:"custom-green-mirror"},nameSpace:"common"}};t.$inject=["$scope"],e.exports=t},function(e,n){"use strict";var t=function(e,n){function t(e){e.on("dragularenter",function(t){e[0]===t.target&&e.addClass(n.shared.extra?"gu-over-accept":"gu-over-decline")}),e.on("dragularleave dragularrelease",function(t){(e[0]===t.target&&n.shared.extra&&n.shared.extra.parentElement!==t.target||"dragularrelease"===t.type)&&(e.removeClass("gu-over-accept"),e.removeClass("gu-over-decline"))})}n.cleanEnviroment(),n([e.children()[0],e.children()[2]],{nameSpace:"apples"}),n([e.children()[1],e.children()[3]],{nameSpace:"oranges"}),angular.forEach(e.children(),function(e){t(angular.element(e))});var r=angular.element(document.getElementsByClassName("notContainer"));r.on("dragularenter",function(){r.addClass("gu-over")}),r.on("dragularleave dragularrelease",function(){r.removeClass("gu-over")})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t,r){function o(e){return function(){}}t.cleanEnviroment();t(n.children(),{scope:e});e.$on("dragulardrag",function(e,n){e.stopPropagation(),n.className=n.className.replace(" ex-moved","")}),e.$on("dragulardrop",function(e,n){e.stopPropagation(),r(function(){n.className+=" ex-moved"},0)}),e.$on("dragularcloned",o("cloned in EventsCtrl")),e.$on("dragulardrag",o("drag in EventsCtrl")),e.$on("dragularcancel",o("cancel in EventsCtrl")),e.$on("dragulardrop",o("drop in EventsCtrl")),e.$on("dragularremove",o("remove in EventsCtrl")),e.$on("dragulardragend",o("dragend in EventsCtrl")),e.$on("dragularshadow",o("shadow in EventsCtrl"))},r=function(e,n,t,r){function o(e){return function(){}}t(n.children(),{scope:e});e.$on("dragulardrag",function(e,n){e.stopPropagation(),n.className=n.className.replace(" ex-moved","")}),e.$on("dragulardrop",function(e,n){e.stopPropagation(),r(function(){n.className+=" ex-moved"},0)}),e.$on("dragularcloned",o("cloned in Events2Ctrl")),e.$on("dragulardrag",o("drag in Events2Ctrl")),e.$on("dragularcancel",o("cancel in Events2Ctrl")),e.$on("dragulardrop",o("drop in Events2Ctrl")),e.$on("dragularremove",o("remove in Events2Ctrl")),e.$on("dragulardragend",o("dragend in Events2Ctrl")),e.$on("dragularshadow",o("shadow in Events2Ctrl"))};t.$inject=["$scope","$element","dragularService","$timeout"],r.$inject=["$scope","$element","dragularService","$timeout"],e.exports=[t,r]},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(e.children(),{moves:function(e,n,t){return t.classList.contains("handle")}})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){e.items1=[{content:"Move me, but you can only drop me in one of these containers."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.cartModel=[];var r=document.querySelector("#containerLeft");t.cleanEnviroment(),t([r],{containersModel:[e.items1],copy:!0,isContainer:function(e){return"cart"===e.id},isContainerModel:function(){return e.cartModel}}),e.removeItem=function(){var n=e.cartModel.indexOf(this.item);e.cartModel.splice(n,1)}};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n([e.children()[0],e.children()[2]],{nameSpace:"apples"}),n(e.children()[1],{nameSpace:"oranges"}),n(e.children()[3],{nameSpace:["oranges","apples"]})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t,r){e(function(){r.cleanEnviroment(),r(t,{nameSpace:"rows",moves:function(e,n,t){return t.classList.contains("row-handle")}}),r(t.children(),{nameSpace:"cells",moves:function(e,n,t){return!t.classList.contains("row-handle")}})},0),n.items=[{items:[{content:"Item a1"},{content:"Item a2"},{content:"Item a3"},{content:"Item a4"}]},{items:[{content:"Item b1"},{content:"Item b2"},{content:"Item b3"},{content:"Item b4"}]},{items:[{content:"Item c1"},{content:"Item c2"},{content:"Item c3"},{content:"Item c4"}]}]};t.$inject=["$timeout","$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t,r){e(function(){var e=t.children().eq(0).children(),o=e.children(),i=[];r.cleanEnviroment(),r(e,{moves:function(e,n,t){return t.classList.contains("row-handle")},containersModel:n.items,nameSpace:"rows"});for(var l=0;l<o.length;l++)i.push(o.eq(l).children()[1]);r(i,{moves:function(e,n,t){return!t.classList.contains("row-handle")},containersModel:function(){for(var e=n.items,t=[],r=0;r<e.length;r++)t.push(e[r].items);return t}(),nameSpace:"cells"})},0),n.items=[{items:[{content:"Item a1"},{content:"Item a2"},{content:"Item a3"},{content:"Item a4"}]},{items:[{content:"Item b1"},{content:"Item b2"},{content:"Item b3"},{content:"Item b4"}]},{items:[{content:"Item c1"},{content:"Item c2"},{content:"Item c3"},{content:"Item c4"}]}]};t.$inject=["$timeout","$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){t.cleanEnviroment(),t(n.children()),e.items=[{content:"Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular."},{content:"Item 2"},{content:"Item 3"},{content:"Item 4"}],e.addItem=function(){var n=e.items.indexOf(this.item)+1;e.items.splice(n,0,{content:this.item.content+"-copy"})},e.removeItem=function(){var n=e.items.indexOf(this.item);e.items.splice(n,1)}};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t,r){e.items1=[{content:"Move me, but you can only drop me in one of these containers."
},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Apple 3"},{content:"Orange 4"},{content:"Orange 5"},{content:"Apple 6"},{content:"Apple 7"},{content:"Apple 8"}],e.items2=[{content:"Apple 9"},{content:"Orange 10"},{content:"Orange 11"},{content:"Apple 12"},{content:"Orange 13"},{content:"Apple 14"}],e.filter1query="Orange",e.filter2query="Orange",e.filteredModel1=[],e.filteredModel2=[],e.getFilteredModel=function(e,n,t){return e.length=0,[].push.apply(e,r("filter")(n,t)),e};var o=n.children().eq(1).children();t.cleanEnviroment(),t([o[0],o[1]],{containersModel:[e.items1,e.items2],containersFilteredModel:[e.filteredModel1,e.filteredModel2]})};t.$inject=["$scope","$element","dragularService","$filter"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){e.items=[{content:"Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular."},{content:"Item 2"},{content:"Item 3"},{content:"Item 4"}],t.cleanEnviroment(),t(n.children().eq(0).children(),{containersModel:e.items}),e.addItem=function(){var n=e.items.indexOf(this.item)+1;e.items.splice(n,0,{content:this.item.content+"-copy"})},e.removeItem=function(){var n=e.items.indexOf(this.item);e.items.splice(n,1)}};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(e.children(),{removeOnSpill:!0})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){e.items1=[{content:"Move me, but you can only drop me in containers."},{content:"If you try to drop me somewhere other than containers, I'll die a fiery death."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"You can drop me in the left container."},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var r=n.children().eq(0).children();t.cleanEnviroment(),t([r[0],r[1]],{containersModel:[e.items1,e.items2],removeOnSpill:!0})};t.$inject=["$scope","$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n){n.cleanEnviroment(),n(e.children(),{revertOnSpill:!0})};t.$inject=["$element","dragularService"],e.exports=t},function(e,n){"use strict";var t=function(e,n,t){function r(n,t,r,i){i||(i=20),angular.element(n).on("dragularenter",function(){t.scrollTop+=r,o=e(function(){t.scrollTop+=r},i)}),angular.element(n).on("dragularleave dragularrelease",function(){e.cancel(o)})}var o,i=document.getElementById("leftScroll"),l=document.getElementById("rightScroll"),a=document.getElementById("leftTopBar"),c=document.getElementById("leftBottomBar"),s=document.getElementById("rightTopBar"),d=document.getElementById("rightBottomBar");t.cleanEnviroment(),t([i,l]),r(a,i,-5),r(c,i,5),r(s,l,-5),r(d,l,5)};t.$inject=["$interval","$element","dragularService"],e.exports=t},function(e,n){"use strict";function t(e,n,t,r){e.cleanEnviroment(),t.items=[{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:1,name:"x",age:"1"},{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:2,name:"y",age:"2"},{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:3,name:"z",age:"3"},{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:1,name:"x",age:"4"},{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:2,name:"y",age:"5"},{questions:[{text:"text1",points:1},{text:"text2",points:2},{text:"text3",points:3}],order:3,name:"z",age:"6"}],r(function(){e("#items",{containersModel:"items",scope:t,moves:function(e,n,t){return t.classList.contains("item")},nameSpace:"items"}),t.$on("dragulardrop",function(){t.items.forEach(function(e,n){e.order=n+1})})})}function r(){return{restrict:"E",template:'<div class="all-data"><div class="subitem" ng-repeat="subitem in question">{{subitem.points}}. {{subitem.text}}</div></div>',controller:"QuestionsController",scope:{question:"="}}}function o(e,n,t){n(t.children(".all-data"),{containersModel:"question",scope:e,nameSpace:"subitem",moves:function(e,n,t){return t.classList.contains("subitem")}}),e.$on("dragulardrop",function(){e.question.forEach(function(e,n){e.points=n+1})})}t.$inject=["dragularService","$element","$scope","$timeout"],angular.module("examplesApp").directive("questionDirective",r).controller("QuestionsController",o),e.exports=t},function(e,n){"use strict";e.exports=angular.module("templates",[]).run(["$templateCache",function(e){e.put("docsInstall/docsInstall.html","<h2>Install</h2>\r\n<p>download dragular.js and dragular.css from dist folder</p>\r\n<p>OR clone git</p>\r\n<pre><code>\r\ngit clone http://github.com/luckylooke/dragular.git\r\n</code></pre>\r\n<p>OR use npm</p>\r\n<pre><code>\r\n[sudo] npm install dragular\r\n</code></pre>\r\n<p>OR use bower</p>\r\n<pre><code>\r\nbower install dragular\r\n</code></pre>\r\n<p>AND include files into your project</p>\r\n<pre><code>\r\n&lt;link href='styles/dragular.css' rel='stylesheet' type='text/css' /&gt;\r\n&lt;script src='scripts/dragular.js'&gt;&lt;/script&gt;\r\n</code></pre>\r\n<p>AND put dragularModule into dependency array</p>\r\n<pre><code>\r\nvar app = angular.module('myApp', ['dragularModule', 'otherDependencies']);\r\n</code></pre>\r\n<p>DONE :)</p>\r\n"),e.put("exampleBasicWithModel/exampleBasicWithModel.html","<div class='parent'>\r\n  <h2>Basic - with model</h2>\r\n  <label>Move stuff between these two containers. Note how the stuff gets inserted near the mouse pointer? Great stuff.</label>\r\n  <div class='wrapper' ng-controller=\"BasicModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div class='containerVertical' id=\"test\">\r\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>Items1:\r\n          <br/>{{items1 | json}}</pre>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <pre>Items2:\r\n          <br/>{{items2 | json}}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  controller('BasicModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, but you can only drop me in one of these containers.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'Item 5'\r\n    }, {\r\n      content: 'Item 6'\r\n    }, {\r\n      content: 'Item 7'\r\n    }, {\r\n      content: 'Item 8'\r\n    }];\r\n    var containers = $element.children().children();\r\n    dragularService([containers[0],containers[1]],{\r\n      containersModel: [$scope.items1, $scope.items2]\r\n    });\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;Basic&quot;&gt;\r\n    &lt;div class='tableRow'&gt;\r\n        &lt;div class='containerVertical'&gt;\r\n            &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class='containerVertical'&gt;\r\n            &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div&gt;Items1:\r\n                &lt;br/&gt;{{items1 | json}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div&gt;Items2:\r\n                &lt;br/&gt;{{items2 | json}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleBasic/exampleBasic.html","<div class='parent'>\r\n  <h2>Basic</h2>\r\n  <label>Move stuff between these two containers. Note how the stuff gets inserted near the mouse pointer? Great stuff.</label>\r\n  <div class='wrapper' ng-controller=\"Basic\">\r\n    <div class='containerVertical'>\r\n      <div>Move me, but you can only drop me in one of these containers.</div>\r\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n      <div>Item 3.</div>\r\n      <div>Item 6.</div>\r\n    </div>\r\n    <div class='containerVertical'>\r\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n      <div ng-click=\"clicked = !clicked\" ng-class=\"clicked && 'clickedClass'\">Try to click me, dragular distinguish drag from click</div>\r\n      <div>Item 5.</div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  controller('Basic', ['$element', 'dragularService', function TodoCtrl($element, dragularService) {\r\n    dragularService('.containerVertical');\r\n  }])\r\n        </code>\r\n        <code>\r\n// CSS\r\n.clickedClass {\r\n  background-color: orange !important;\r\n}\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n  &lt;div class='wrapper' ng-controller=&quot;Basic&quot;&gt;\r\n    &lt;div class='containerVertical'&gt;\r\n        &lt;div&gt;Move me, but you can only drop me in one of these containers.&lt;/div&gt;\r\n        &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\r\n        &lt;div&gt;Item 3.&lt;/div&gt;\r\n        &lt;div&gt;Item 6.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class='containerVertical'&gt;\r\n        &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\r\n        &lt;div ng-click=\"clicked = !clicked\" ng-class=\"clicked && 'clickedClass'\"&gt;Try to click me, dragular distinguish drag from click&lt;/div&gt;\r\n        &lt;div&gt;Item 5.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleBoundingBox/exampleBoundingBox.html","        <div class='parent'>\r\n            <h2>BoundingBox</h2>\r\n            <label>You can provide element in options.boundingBox to limit crossing element borders.</label>\r\n            <div class='wrapper' ng-controller=\"BoundingBox\">\r\n                <div class='containerVertical'>\r\n                    <div>This items cannot cross its example element, just try it your selves.</div>\r\n                    <div>Item 2.</div>\r\n                    <div>Item 3.</div>\r\n                    <div>Item 6.</div>\r\n                </div>\r\n                <div class='containerVertical'>\r\n                    <div>This items cannot cross its example element, just try it your selves.</div>\r\n                    <div>Item 4.</div>\r\n                    <div>Item 5.</div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  dragularService([$element.children(), {\r\n    boundingBox: $element\r\n  });\r\n        </code>\r\n      </pre>\r\n        </div>"),e.put("exampleBoundingBoxLockY/exampleBoundingBoxLockY.html","        <div class='parent'>\r\n            <h2>BoundingBox and LockY</h2>\r\n            <label>Movement can be locked to X or Y axis and also you can provide element in options.boundingBox to limit crossing element borders.</label>\r\n            <div class='wrapper' ng-controller=\"BoundingBoxLockY\">\r\n                <div class='containerVertical'>\r\n                    <div class='boundingBox'>\r\n                        <div>Items are locked in Y axis movement and cannot cross its closest parent div.boundingBox, just try it your selves.</div>\r\n                        <div>item 2</div>\r\n                        <div>item 3</div>\r\n                        <div>item 4</div>\r\n                        <div>item 5</div>\r\n                        <div>item 6</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  dragularService([$element.children()[0].children(), {\r\n    boundingBox: $element.children()[0],\r\n    lockY: true\r\n  });\r\n        </code>\r\n      </pre>\r\n        </div>"),e.put("exampleBoundingBoxLockX/exampleBoundingBoxLockX.html",'<div class=\'parent\'>\r\n            <h2>BoundingBox and lockX</h2>\r\n            <label>Movement can be locked to X or Y axis and also you can provide element in options.boundingBox to limit crossing element borders.</label>\r\n            <div class=\'wrapper\' ng-controller="BoundingBoxLockX">\r\n                <div class=\'containerHorizontal\'>\r\n                    <div class=\'boundingBox\'>\r\n                        <div class="width25">Items are locked in X axis movement and cannot cross its closest parent div.boundingBox, just try it your selves.</div>\r\n                        <div class="width25">item 2</div>\r\n                        <div class="width25">item 3</div>\r\n                        <div class="width25">item 4</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  dragularService([$element.children()[0].children(), {\r\n    boundingBox: $element.children()[0],\r\n    lockX: true\r\n  });\r\n        </code>\r\n      </pre>\r\n        </div>'),e.put("exampleCopy/exampleCopy.html","<div class='parent'>\r\n  <h2>Copy</h2>\r\n  <label>Copying stuff is great too.</label>\r\n  <div class='wrapper' ng-controller=\"Copy\" ng-hide=\"globals.showModelExamples\">\r\n    <div id='left2' class='containerVertical'>\r\n      <div>Move me, and make copy on drop.</div>\r\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n    </div>\r\n    <div id='right2' class='containerVertical'>\r\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  controller('Copy', ['$element', 'dragularService', function TodoCtrl($element, dragularService) {\r\n    dragularService($element.children(), {\r\n      copy: true\r\n    });\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;Copy&quot; ng-hide=&quot;globals.showModelExamples&quot;&gt;\r\n    &lt;div id='left2' class='containerVertical'&gt;\r\n      &lt;div&gt;Move me, and make copy on drop.&lt;/div&gt;\r\n      &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div id='right2' class='containerVertical'&gt;\r\n      &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleCopyWithModel/exampleCopyWithModel.html","<div class='parent'>\r\n  <h2>Copy - with model</h2>\r\n  <label>Copying stuff is great too.</label>\r\n  <div class='wrapper' ng-controller=\"CopyModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <div>Items1:\r\n          <pre>\r\n            {{ items1 | json }}\r\n          </pre>\r\n        </div>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <div>Items2:\r\n          <pre>\r\n            {{ items2 | json }}\r\n          </pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  controller('CopyModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, and make copy on drop.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'Item 5'\r\n    }, {\r\n      content: 'Item 6'\r\n    }, {\r\n      content: 'Item 7'\r\n    }, {\r\n      content: 'Item 8'\r\n    }];\r\n    var containers = $element.children().children();\r\n    dragularService([containers[0],containers[1]],{\r\n      containersModel: [$scope.items1, $scope.items2],\r\n      copy: true\r\n    });\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;CopyModel&quot; ng-show=&quot;globals.showModelExamples&quot;&gt;\r\n    &lt;div class='tableRow'&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n      &lt;div class=&quot;container&quot;&gt;\r\n        &lt;div&gt;Items1:\r\n          &lt;br/&gt;{{items1 | json}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class=&quot;container&quot;&gt;\r\n        &lt;div&gt;Items2:\r\n          &lt;br/&gt;{{items2 | json}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleCustomClasses/exampleCustomClasses.html","<div class='parent'>\r\n    <h2>Custom classes</h2>\r\n    <label>You can overwrite buildin classes by providing classes names in object via options.classes.</label>\r\n    <div class='wrapper' ng-controller=\"CustomClasses\">\r\n        <div id='left4' class='containerVertical'>\r\n            <div>Move me, but you can only drop me in one of these containers.</div>\r\n            <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n            <div>Item 3.</div>\r\n            <div>Item 6.</div>\r\n        </div>\r\n        <div id='right3' class='containerVertical'>\r\n            <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n            <div>Item 4.</div>\r\n            <div>Item 5.</div>\r\n        </div>\r\n    </div>\r\n    <pre>\r\n        <code>\r\n  dragularService([document.getElementById(left), document.getElementById(right)], { classes: {\r\n    mirror: 'custom-green-mirror'\r\n  } });\r\n\r\n  // Default classes are:\r\n  option.classes = {\r\n    mirror: 'gu-mirror',\r\n    hide: 'gu-hide',\r\n    unselectable: 'gu-unselectable',\r\n    transit: 'gu-transit',\r\n    overActive: 'gu-over-active',\r\n    overAccepts: 'gu-over-accept',\r\n    overDeclines: 'gu-over-decline'\r\n  };\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleDifferentOptionsWithModel/exampleDifferentOptionsWithModel.html","<div class='parent'>\r\n  <h2>Different options - with model</h2>\r\n  <label>You may need to setup different options (rules) for each container. For such setup you need to initialize each container separately. <b>Do not initialize same container twice!</b> In example bellow you can copy from left to right, but not otherwise. And from right container items can be removed on spill.</label>\r\n  <div class='wrapper' ng-controller=\"DifferentOptionsModel\">\r\n    <div class='tableRow'>\r\n      <div id=\"containerLeft\" class='containerVertical'>\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div id=\"containerRight\" class='containerVertical'>\r\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>Items1:\r\n          <br/>{{items1 | json}}</pre>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <pre>Items2:\r\n          <br/>{{items2 | json}}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  .controller('DifferentOptionsModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, but you can only drop me in one of these containers.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'Item 5'\r\n    }, {\r\n      content: 'Item 6'\r\n    }, {\r\n      content: 'Item 7'\r\n    }, {\r\n      content: 'Item 8'\r\n    }];\r\n\r\n    var containerLeft = document.querySelector('#containerLeft'),\r\n      containerRight = document.querySelector('#containerRight');\r\n\r\n    function accepts(el, target, source) {\r\n      if (source === containerLeft || source === target) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    dragularService([containerLeft], {\r\n      containersModel: [$scope.items1],\r\n      copy: true,\r\n      //move only from left to right  \r\n      accepts: accepts\r\n    });\r\n\r\n    dragularService([containerRight], {\r\n      containersModel: [$scope.items2],\r\n      removeOnSpill: true,\r\n      //move only from left to right  \r\n      accepts: accepts\r\n    });\r\n\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;DifferentOptionsModel&quot;&gt;\r\n    &lt;div class='tableRow'&gt;\r\n      &lt;div id=&quot;containerLeft&quot; class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;div id=&quot;containerRight&quot; class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Items1:\r\n          &lt;br/&gt;{{items1 | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Items2:\r\n          &lt;br/&gt;{{items2 | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleDirective/exampleDirective.html","<div class='parent'>\r\n  <h2>Directive</h2>\r\n  <label>Same as custom classes example, but showing use of directive.</label>\r\n  <div class='wrapper' ng-controller=\"Directive\">\r\n    <div class='containerVertical' dragular=\"dragularOptions\">\r\n      <div>Move me, but you can only drop me in one of these containers.</div>\r\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n      <div>Item 3.</div>\r\n      <div>Item 6.</div>\r\n    </div>\r\n    <div class='containerVertical' dragular='{\"classes\":{\"mirror\":\"custom-green-mirror\"},\"nameSpace\":\"same\"}'>\r\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n      <div>Item 4.</div>\r\n      <div>Item 5.</div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  controller('Directive', ['$scope', 'dragularService', function TodoCtrl($scope) {\r\n    $scope.dragularOptions = {\r\n      classes: {\r\n        mirror: 'custom-green-mirror'\r\n      },\r\n      nameSpace: 'common' // just connecting left and right container\r\n    };\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;Directive&quot;&gt;\r\n    &lt;div class='containerVertical' dragular=&quot;dragularOptions&quot;&gt;\r\n      &lt;div&gt;Move me, but you can only drop me in one of these containers.&lt;/div&gt;\r\n      &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\r\n      &lt;div&gt;Item 3.&lt;/div&gt;\r\n      &lt;div&gt;Item 6.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class='containerVertical' dragular='{&quot;classes&quot;:{&quot;mirror&quot;:&quot;custom-green-mirror&quot;},&quot;nameSpace&quot;:&quot;same&quot;}'&gt;\r\n      &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\r\n      &lt;div&gt;Item 4.&lt;/div&gt;\r\n      &lt;div&gt;Item 5.&lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleDirectiveWithModel/exampleDirectiveWithModel.html","<div class='parent'>\r\n  <h2>Directive - with model</h2>\r\n  <label>Same as custom classes example, but showing use of directive.</label>\r\n  <div class='wrapper' ng-controller=\"DirectiveModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical' dragular=\"dragularOptions\">\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div class='containerVertical' dragular-model=\"items2\" dragular='{\"classes\":{\"mirror\":\"custom-green-mirror\"},\"nameSpace\":\"common\"}'>\r\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <div>Items1:\r\n          <br/>{{items1 | json}}</div>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <div>Items2:\r\n          <br/>{{items2 | json}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n       \r\n        <code>\r\n// JS\r\n  controller('DirectiveModel', ['$scope', function TodoCtrl($scope) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, and make copy on drop.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'Item 5'\r\n    }, {\r\n      content: 'Item 6'\r\n    }, {\r\n      content: 'Item 7'\r\n    }, {\r\n      content: 'Item 8'\r\n    }];\r\n    $scope.dragularOptions = {\r\n      containersModel: $scope.items1,\r\n      classes: {\r\n        mirror: 'custom-green-mirror'\r\n      },\r\n      nameSpace: 'common' // just connecting left and right container\r\n    };\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n &lt;div class='wrapper' ng-controller=&quot;DirectiveModel&quot;&gt;\r\n  &lt;div class='containerVertical' dragular=&quot;dragularOptions&quot;&gt;\r\n    &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class='containerVertical' dragular='{&quot;containersModel&quot;:&quot;items2&quot;,&quot;classes&quot;:{&quot;mirror&quot;:&quot;custom-green-mirror&quot;},&quot;nameSpace&quot;:&quot;common&quot;}'&gt;\r\n    &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleDragOverEvents/exampleDragOverEvents.html","<div class='parent'>\r\n  <h2>Drag-over events</h2>\r\n  <p>You can interact with dragging element by litening to dragOver events. Usually you want to containers show wheather they accepts element or not, but you can use it anywhere. DragOver events are: dragenter, dragleave and dragrelease. On dragOver events dragularService reveals several useful properties.</p>\r\n\r\n<div class=\"table-responsive\">\r\n  <table class=\"table table-hover\">\r\n    <tr>\r\n      <td>dragularService.shared.item</td>\r\n      <td>item beeing dragged (it is copy of item if copy is enabled via options)</td>\r\n    </tr>\r\n    <tr>\r\n      <td>dragularService.shared.source</td>\r\n      <td>source container item is dragged from</td>\r\n    </tr>\r\n    <tr>\r\n      <td>dragularService.shared.sourceModel</td>\r\n      <td>source container model representation if model was porvided</td>\r\n    </tr>\r\n    <tr>\r\n      <td>dragularService.shared.initialIndex</td>\r\n      <td>original index of item, can be used to get item model from sourceModel</td>\r\n    </tr>\r\n    <tr>\r\n      <td>dragularService.shared.extra</td>\r\n      <td>contains accepting information (boolean) on dragenter, element drag is leaving to on dragleave and element behind the cursor on dragrelease</td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n  <p> Try to drag over the not-container too.</p>\r\n  <div class='wrapper' ng-controller=\"DragOverEvents\">\r\n    <div class='containerVertical width25'>\r\n      <div>apples and oranges cannot be mixed</div>\r\n      <div>apple 2</div>\r\n      <div>apple 3</div>\r\n      <div>apple 4</div>\r\n    </div>\r\n    <div class='containerVertical width25'>\r\n      <div>orange 1</div>\r\n      <div>orange 2</div>\r\n      <div>orange 3</div>\r\n      <div>orange 4</div>\r\n    </div>\r\n    <div class='containerVertical width25'>\r\n      <div>apple 5</div>\r\n      <div>apple 6</div>\r\n      <div>apple 7</div>\r\n      <div>apple 8</div>\r\n    </div>\r\n    <div class='containerVertical width25'>\r\n      <div>orange 5</div>\r\n      <div>orange 6</div>\r\n      <div>orange 7</div>\r\n      <div>orange 8</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"notContainer gu-over-active\"> Test active class on NOT container.</div>\r\n\r\n  <pre>\r\n    <code>\r\n&lt;!-- HTML --&gt;\r\n  &lt;div class='wrapper' ng-controller=&quot;DragOverEvents&quot;&gt;\r\n    &lt;div class='container width25'&gt;\r\n      &lt;div&gt;apples and oranges cannot be mixed&lt;/div&gt;\r\n      &lt;div&gt;apple 2&lt;/div&gt;\r\n      ...\r\n    &lt;/div&gt;\r\n    &lt;div class='container width25'&gt;\r\n      &lt;div&gt;orange 1&lt;/div&gt;\r\n      &lt;div&gt;orange 2&lt;/div&gt;\r\n      ...\r\n    &lt;/div&gt;\r\n    &lt;div class='container width25'&gt;\r\n      &lt;div&gt;apple 5&lt;/div&gt;\r\n      &lt;div&gt;apple 6&lt;/div&gt;\r\n      ...\r\n    &lt;/div&gt;\r\n    &lt;div class='container width25'&gt;\r\n      &lt;div&gt;orange 5&lt;/div&gt;\r\n      &lt;div&gt;orange 6&lt;/div&gt;\r\n      ...\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class=&quot;notContainer&quot;&gt; Test active class on NOT container.&lt;/div&gt;\r\n    </code>\r\n  </pre>\r\n\r\n  <pre>\r\n    <code>\r\n  // CSS\r\n  \r\n.notContainer.gu-over {\r\n  background-color: yellow;\r\n}\r\n\r\n.containerVertical.gu-over-accept {\r\n  background-color: green;\r\n}\r\n\r\n.containerVertical.gu-over-decline {\r\n  background-color: red;\r\n}\r\n    </code>\r\n  </pre>\r\n\r\n  <pre>\r\n    <code>\r\n  // JS\r\n  controller('DragOverEvents', ['$element', 'dragularService', function TodoCtrl($element, dragularService) {\r\n    dragularService.cleanEnviroment();\r\n    dragularService([$element.children()[0], $element.children()[2]], {\r\n      nameSpace: 'apples'\r\n    });\r\n    dragularService([$element.children()[1], $element.children()[3]], {\r\n      nameSpace: 'oranges'\r\n    });\r\n\r\n    // containers events handling\r\n    function registerEvents(el) {\r\n      el.on('dragularenter', function(e) {\r\n        if (el[0] === e.target) { // filter bubbled\r\n          el.addClass(dragularService.shared.extra ? 'gu-over-accept' : 'gu-over-decline');\r\n        }\r\n      });\r\n      el.on('dragularleave dragularrelease', function(e) {\r\n        if ((el[0] === e.target && // filter bubbled\r\n          dragularService.shared.extra && // extra on dragleave contains element the drag is leaving to\r\n          dragularService.shared.extra.parentElement !== e.target) // is that element child of this container?\r\n          || e.type === 'dragularrelease') {\r\n          el.removeClass('gu-over-accept');\r\n          el.removeClass('gu-over-decline');\r\n        }\r\n      });\r\n    }\r\n\r\n    angular.forEach($element.children(), function forEachChild(el) {\r\n      registerEvents(angular.element(el));\r\n    });\r\n\r\n    // notContainer events handling\r\n    var notContainer = angular.element(document.getElementsByClassName('notContainer'));\r\n    notContainer.on('dragularenter', function() {\r\n      notContainer.addClass('gu-over');\r\n    });\r\n    notContainer.on('dragularleave dragularrelease', function() {\r\n      notContainer.removeClass('gu-over');\r\n    });\r\n  }])\r\n    </code>\r\n  </pre>\r\n</div>\r\n"),
e.put("exampleEvents/exampleEvents.html","<div class='parent'>\r\n    <h2>Events</h2>\r\n    <label>Add some fantastic events!</label><p>Events affecting more than on cotrollers are emitted on both scopes if provided.</p>\r\n    <h3>EventsCtrl</h3>\r\n    <div class='wrapper' ng-controller=\"Events\">\r\n        <div id='left3' class='containerVertical'>\r\n            <div>Move me, but you can only drop me in one of these containers.</div>\r\n            <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n            <div>Item 3.</div>\r\n            <div>Item 6.</div>\r\n        </div>\r\n        <div id='right3' class='containerVertical'>\r\n            <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n            <div>Item 4.</div>\r\n            <div>Item 5.</div>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n    <h3>Events2Ctrl</h3>\r\n    <div class='wrapper' ng-controller=\"Events2\">\r\n        <div id='left3' class='containerVertical'>\r\n            <div>Move me, but you can only drop me in one of these containers.</div>\r\n            <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n            <div>Item 3.</div>\r\n            <div>Item 6.</div>\r\n        </div>\r\n        <div id='right3' class='containerVertical'>\r\n            <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n            <div>Item 4.</div>\r\n            <div>Item 5.</div>\r\n        </div>\r\n    </div>\r\n    <pre>\r\n        <code>\r\nvar EventsCtrl = function ($scope, $element, dragularService, $timeout) {\r\n  \r\n  var drake = dragularService($element.children(), {\r\n    scope: $scope\r\n  });\r\n  $scope.$on('dragulardrag', function(e, el) {\r\n    e.stopPropagation();\r\n    el.className = el.className.replace(' ex-moved', '');\r\n  });\r\n  $scope.$on('dragulardrop', function(e, el) {\r\n    e.stopPropagation();\r\n    $timeout(function() {\r\n      el.className += ' ex-moved';\r\n    }, 0);\r\n  });\r\n\r\n  $scope.$on('dragularcloned', myFn('cloned in EventsCtrl'));\r\n  $scope.$on('dragulardrag', myFn('drag in EventsCtrl'));\r\n  $scope.$on('dragularcancel', myFn('cancel in EventsCtrl'));\r\n  $scope.$on('dragulardrop', myFn('drop in EventsCtrl'));\r\n  $scope.$on('dragularremove', myFn('remove in EventsCtrl'));\r\n  $scope.$on('dragulardragend', myFn('dragend in EventsCtrl'));\r\n  $scope.$on('dragularshadow', myFn('shadow in EventsCtrl'));\r\n\r\n  function myFn(eventName) {\r\n    return function() {\r\n      console.log(eventName, arguments, drake);\r\n    };\r\n  }\r\n};\r\n\r\nvar Events2Ctrl = function ($scope, $element, dragularService, $timeout) {\r\n  var drake = dragularService($element.children(), {\r\n    scope: $scope\r\n  });\r\n  $scope.$on('dragulardrag', function(e, el) {\r\n    e.stopPropagation();\r\n    el.className = el.className.replace(' ex-moved', '');\r\n  });\r\n  $scope.$on('dragulardrop', function(e, el) {\r\n    e.stopPropagation();\r\n    $timeout(function() {\r\n      el.className += ' ex-moved';\r\n    }, 0);\r\n  });\r\n\r\n  $scope.$on('dragularcloned', myFn('cloned in Events2Ctrl'));\r\n  $scope.$on('dragulardrag', myFn('drag in Events2Ctrl'));\r\n  $scope.$on('dragularcancel', myFn('cancel in Events2Ctrl'));\r\n  $scope.$on('dragulardrop', myFn('drop in Events2Ctrl'));\r\n  $scope.$on('dragularremove', myFn('remove in Events2Ctrl'));\r\n  $scope.$on('dragulardragend', myFn('dragend in Events2Ctrl'));\r\n  $scope.$on('dragularshadow', myFn('shadow in Events2Ctrl'));\r\n\r\n  function myFn(eventName) {\r\n    return function() {\r\n      console.log(eventName, arguments, drake);\r\n    };\r\n  }\r\n};\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleHandle/exampleHandle.html","<div class='parent'>\r\n    <h2>Handle</h2>\r\n    <label>Drag handles float your cruise?</label>\r\n    <div class='wrapper' ng-controller=\"Handle\">\r\n        <div id='left5' class='containerVertical'>\r\n            <div><span class='handle'>+</span>Move me, but you can use the plus sign to drag me around.</div>\r\n        </div>\r\n        <div id='right5' class='containerVertical'>\r\n        </div>\r\n    </div>\r\n    <pre>\r\n        <code>\r\n  dragularService([document.getElementById(left), document.getElementById(right)], {\r\n    moves: function (el, container, handle) {\r\n      return handle.className === 'handle';\r\n    }\r\n  });\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleIsContainerWithModel/exampleIsContainerWithModel.html","<div class='parent'>\r\n  <h2>isContainer - with model</h2>\r\n  <label>Possible use case of <b>options.isContainer</b> combined with model. When you provide function <b>isContainer</b> and in case it returns true and you are providing models (<b>options.containersModel</b>), dragular check for model by calling <b>options.isContainerModel(el)</b> function. If not provided, model is discarted.</label>\r\n  <div class='wrapper' ng-controller=\"IsContainerModel\">\r\n    <div class='tableRow'>\r\n      <div id=\"containerLeft\" class='containerVertical'>\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div id=\"cart\" class='containerVertical'>\r\n        <div class='cursorDefault' ng-repeat=\"item in cartModel\">{{item.content}}\r\n        <button class='cursorDefault' ng-click=\"removeItem()\">x</button></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>Items1:\r\n          <br/>{{items1 | json}}</pre>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <pre>Cart:\r\n          <br/>{{cartModel | json}}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  .controller('IsContainerModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, but you can only drop me in one of these containers.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.cartModel = [];\r\n\r\n    var containerLeft = document.querySelector('#containerLeft');\r\n\r\n    dragularService.cleanEnviroment();\r\n    dragularService([containerLeft], {\r\n      containersModel: [$scope.items1],\r\n      copy: true,\r\n      isContainer: function isContainer (el) {\r\n        return el.id === 'cart';\r\n      },\r\n      isContainerModel: function getModel (){\r\n        return $scope.cartModel;\r\n      }\r\n    });\r\n\r\n    $scope.removeItem = function removeItem() {\r\n      var index = $scope.cartModel.indexOf(this.item);\r\n      $scope.cartModel.splice(index, 1);\r\n    };\r\n\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n &lt;div class='wrapper' ng-controller=&quot;IsContainerModel&quot;&gt;\r\n    &lt;div class='tableRow'&gt;\r\n      &lt;div id=&quot;containerLeft&quot; class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;div id=&quot;cart&quot; class='containerVertical'&gt;\r\n        &lt;div class='cursorDefault' ng-repeat=&quot;item in cartModel&quot;&gt;{{item.content}}\r\n        &lt;button class='cursorDefault' ng-click=&quot;removeItem()&quot;&gt;x&lt;/button&gt;&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Items1:\r\n          &lt;br/&gt;{{items1 | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Cart:\r\n          &lt;br/&gt;{{cartModel | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleNameSpaces/exampleNameSpaces.html","        <div class='parent'>\r\n            <h2>NameSpaces</h2>\r\n            <label>Try to mix apples and oranges. You cannot place apples into oranges, but notice that you can place it into mixed. Mixed can be placed into apples and oranges. Notice that mixed becomes orange or apple if placed into their container. <b>So remember if you are using namespacing, then item is namespaced according to actual container it is placed in. If you need to item preserve thier state you need to use classes in combination with options.accepts and optionally options.isContainer.</b> It depends on setup. (See <a href=\"https://github.com/luckylooke/dragular/issues/9\">issue #9</a>.)</label>\r\n            <div class='wrapper' ng-controller=\"NameSpaces\">\r\n                <div class='containerVertical width25'>\r\n                    <div>try to mix oranges and apples</div>\r\n                    <div>apple 2</div>\r\n                    <div>apple 3</div>\r\n                    <div>apple 4</div>\r\n                </div>\r\n                <div class='containerVertical width25'>\r\n                    <div>orange 1</div>\r\n                    <div>orange 2</div>\r\n                    <div>orange 3</div>\r\n                    <div>orange 4</div>\r\n                </div>\r\n                <div class='containerVertical width25'>\r\n                    <div>apple 5</div>\r\n                    <div>apple 6</div>\r\n                    <div>apple 7</div>\r\n                    <div>apple 8</div>\r\n                </div>\r\n                <div class='containerVertical width25'>\r\n                    <div>mixed 1</div>\r\n                    <div>mixed 2</div>\r\n                    <div>mixed 3</div>\r\n                    <div>mixed 4</div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n      <code>\r\ndragularService([$element.children()[0], $element.children()[2]], {\r\n  nameSpace: 'apples'\r\n});\r\ndragularService($element.children()[1], {\r\n  nameSpace: 'oranges'\r\n});\r\ndragularService($element.children()[3], { // mixed\r\n  nameSpace: ['oranges', 'apples']\r\n});\r\n      </code>\r\n    </pre>\r\n        </div>"),e.put("exampleNestedNgRepeat/exampleNestedNgRepeat.html","<div class='parent'>\r\n    <h2>Nested ngRepeat</h2>\r\n    <label> You can move whole rows by grabing row title, all items it selves. Try it out!\r\n        <hr/>\r\n        <b>Old IE doesnt support Flexible Box Layout</b> so it can look weird. But in modern browsers it is awsome! Dragular will be working well also in old IE but you have to use different css for layout.\r\n        <hr/>\r\n    </label>\r\n    <div ng-controller=\"NestedNgRepeat\">\r\n        <div ng-repeat=\"item in items\" class='exampleRow'>\r\n            <div class=\"row-handle\">Row {{$index}}</div>\r\n            <div ng-repeat=\"item in item.items\" class=\"exampleCell\">{{item.content}}</div>\r\n        </div>\r\n    </div>\r\n    <pre>\r\n        <code>\r\n  // HTML\r\n\r\n  &lt;div ng-controller=&quot;Example15&quot;&gt;\r\n    &lt;div ng-repeat=&quot;item in items&quot; class='exampleRow'&gt;\r\n      &lt;div class=&quot;row-handle&quot;&gt;Row {{$index}}&lt;/div&gt;\r\n      &lt;div ng-repeat=&quot;item in item.items&quot; class=&quot;exampleCell&quot;&gt;{{item.content}}&lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n    <pre>\r\n        <code>\r\n  // CSS\r\n\r\n  .exampleRow {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .exampleCell {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .exampleRow,\r\n  .exampleCell {\r\n    margin: 10px;\r\n    padding: 10px;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    cursor: move;\r\n    cursor: grab;\r\n    cursor: -moz-grab;\r\n    cursor: -webkit-grab;\r\n  }\r\n        </code>\r\n      </pre>\r\n    <pre>\r\n        <code>\r\n  // JS\r\n\r\n  .controller('NestedNgRepeat', ['$timeout', '$scope', '$element', 'dragularService', function NestedNgRepeatCtrl($timeout, $scope, $element, dragularService) {\r\n    $timeout(function() { // timeount due to ngRepeat to be ready\r\n      dragularService($element, {\r\n        nameSpace: 'rows',\r\n        moves: function rowOnly (el, container, handle) {\r\n          return handle.classList.contains('row-handle');\r\n        }\r\n      });\r\n      dragularService($element.children(), {\r\n        nameSpace: 'cells',\r\n        moves: function excludeHandle (el, container, handle) {\r\n          return !handle.classList.contains('row-handle');\r\n        }\r\n      });\r\n    }, 0);\r\n    $scope.items = [{\r\n      items: [{\r\n        content: 'Item a1'\r\n      }, {\r\n        content: 'Item a2'\r\n      }, {\r\n        content: 'Item a3'\r\n      }, {\r\n        content: 'Item a4'\r\n      }]\r\n    }, {\r\n      items: [{\r\n        content: 'Item b1'\r\n      }, {\r\n        content: 'Item b2'\r\n      }, {\r\n        content: 'Item b3'\r\n      }, {\r\n        content: 'Item b4'\r\n      }]\r\n    }, {\r\n      items: [{\r\n        content: 'Item c1'\r\n      }, {\r\n        content: 'Item c2'\r\n      }, {\r\n        content: 'Item c3'\r\n      }, {\r\n        content: 'Item c4'\r\n      }]\r\n    }];\r\n  }])\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.html","<div class='parent'>\r\n  <h2>Nested ngRepeat - with model</h2>\r\n  <label> You can move whole rows by grabing row title, all items it selves. Try it out!\r\n    <hr/>\r\n    <b>Old IE doesnt support Flexible Box Layout</b> so it can look weird. But in modern browsers it is awsome! Dragular will be working well also in old IE but you have to use different css for layout.\r\n    <hr/>\r\n  </label>\r\n  <div ng-controller=\"NestedNgRepeatWithModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items\" class='exampleRow'>\r\n          <div class=\"row-handle\">Row {{::$index}}</div>\r\n          <div class=\"exampleRow exampleCell containerNested\">\r\n            <div ng-repeat=\"item in item.items\" class=\"exampleCell\">{{item.content}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>\r\n            <div>Items:\r\n              <br/>{{items | json}}</div>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n    <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div ng-controller=&quot;NestedNgRepeatWithModel&quot;&gt;\r\n  &lt;div class='containerVertical'&gt;\r\n    &lt;div ng-repeat=&quot;item in items&quot; class='exampleRow'&gt;\r\n      &lt;div class=&quot;row-handle&quot;&gt;Row {{::$index}}&lt;/div&gt;\r\n      &lt;div class=&quot;exampleRow exampleCell containerNested&quot;&gt;\r\n        &lt;div ng-repeat=&quot;item in item.items&quot; class=&quot;exampleCell&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n    </code>\r\n  </pre>\r\n  <pre>\r\n    <code>\r\n  // CSS\r\n\r\n  .exampleRow {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .exampleCell {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  .exampleRow,\r\n  .exampleCell {\r\n    margin: 10px;\r\n    padding: 10px;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    cursor: move;\r\n    cursor: grab;\r\n    cursor: -moz-grab;\r\n    cursor: -webkit-grab;\r\n  }\r\n    </code>\r\n  </pre>\r\n  <pre>\r\n    <code>\r\n  // JS\r\n.controller('NestedNgRepeatWithModel', ['$timeout', '$scope', '$element', 'dragularService', function NestedNgRepeatWithModelCtrl($timeout, $scope, $element, dragularService) {\r\n    $timeout(function() { // timeount due to nested ngRepeat to be ready\r\n      var container = $element.children().eq(0).children(),\r\n        parentContainers = container.children(),\r\n        nestedContainers = [];\r\n\r\n      dragularService(container, {\r\n        moves: function(el, container, handle) {\r\n          return handle.classList.contains('row-handle');\r\n        },\r\n        containersModel: $scope.items,\r\n        nameSpace: 'rows'\r\n      });\r\n\r\n      // collect nested contianers\r\n      for (var i = 0; i < parentContainers.length; i++) {\r\n        nestedContainers.push(parentContainers.eq(i).children()[1]);\r\n      }\r\n\r\n      dragularService(nestedContainers, {\r\n        moves: function(el, container, handle) {\r\n          return !handle.classList.contains('row-handle');\r\n        },\r\n        containersModel: (function getNestedContainersModel(){\r\n          var parent = $scope.items,\r\n            containersModel = [];\r\n          for (var i = 0; i < parent.length; i++) {\r\n            containersModel.push(parent[i].items);\r\n          }\r\n          return containersModel;\r\n        })(),\r\n        nameSpace: 'cells'\r\n      });\r\n    }, 0);\r\n    $scope.items = [{\r\n      items: [{\r\n        content: 'Item a1'\r\n      }, {\r\n        content: 'Item a2'\r\n      }, {\r\n        content: 'Item a3'\r\n      }, {\r\n        content: 'Item a4'\r\n      }]\r\n    }, {\r\n      items: [{\r\n        content: 'Item b1'\r\n      }, {\r\n        content: 'Item b2'\r\n      }, {\r\n        content: 'Item b3'\r\n      }, {\r\n        content: 'Item b4'\r\n      }]\r\n    }, {\r\n      items: [{\r\n        content: 'Item c1'\r\n      }, {\r\n        content: 'Item c2'\r\n      }, {\r\n        content: 'Item c3'\r\n      }, {\r\n        content: 'Item c4'\r\n      }]\r\n    }];\r\n  }])\r\n    </code>\r\n  </pre>\r\n</div>\r\n"),e.put("exampleNestedRepeatsWithCustomDirective/exampleNestedRepeatsWithCustomDirective.html",'<div class=\'app\' ng-controller="NestedRepeatsWithCustomDirective">\r\n    <div id="items" class="can-be-empty">\r\n        <div class="item" ng-repeat="item in items">\r\n            {{item.order}}: ({{item.name}} + {{item.age}})\r\n            <div class="all-subitems">\r\n                <question-directive question="item.questions"></question-directive>\r\n                <!--             {{question.points}} + {{question.text}} -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>'),e.put("exampleNgRepeat/exampleNgRepeat.html","        <div class='parent'>\r\n            <h2>ngRepeat</h2>\r\n            <label>Example of using ng-repeat with dragular and adding/removing items dynamicaly.</label>\r\n            <div class='wrapper' ng-controller=\"NgRepeat\">\r\n                <div class='containerVertical'>\r\n                    <div ng-repeat=\"item in items\">\r\n                        {{item.content}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  // HTML:\r\n  &lt;div class='containerVertical'&gt;\r\n    &lt;div ng-repeat=&quot;item in items&quot;&gt;\r\n      {{item.content}}\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n\r\n  // JS:\r\n  dragularService($element.children());\r\n  $scope.items = [{\r\n    content: 'Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular.'\r\n  },{\r\n    content: 'Item 2'\r\n  },{\r\n    content: 'Item 3'\r\n  },{\r\n    content: 'Item 4'\r\n  }];\r\n        </code>\r\n      </pre>\r\n        </div>\r\n"),e.put("exampleNgRepeatFilteredWithModel/exampleNgRepeatFilteredWithModel.html","<div class='parent'>\r\n  <h2>Filtered ngRepeat - with model</h2>\r\n  <p>Move stuff between these two filtered containers. You can play with filter inputs to see that everything goes right.\r\n    <br/>\r\n    <b>Please notify the getFilteredModel function, it is necessery for not replacing the initial array object with new filtered one!</b></p>\r\n  <div class='wrapper' ng-controller=\"NgRepeatFilteredWithModel\">\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <input ng-model=\"filter1query\" style=\"margin:10px 10px\">\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <input ng-model=\"filter2query\" style=\"margin:10px 10px\">\r\n      </div>\r\n    </div>\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in getFilteredModel(filteredModel1, items1, filter1query)\">{{item.content}}</div>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in getFilteredModel(filteredModel2, items2, filter2query)\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>Items1:\r\n          <br/>{{items1 | json}}</pre>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <pre>Items2:\r\n          <br/>{{items2 | json}}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n        <code>\r\n// JS\r\n  .controller('NgRepeatFilteredWithModel', ['$scope', '$element', 'dragularService', '$filter', function TodoCtrl($scope, $element, dragularService, $filter) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, but you can only drop me in one of these containers.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\r\n    }, {\r\n      content: 'Apple 3'\r\n    }, {\r\n      content: 'Orange 4'\r\n    }, {\r\n      content: 'Orange 5'\r\n    }, {\r\n      content: 'Apple 6'\r\n    }, {\r\n      content: 'Apple 7'\r\n    }, {\r\n      content: 'Apple 8'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'Apple 9'\r\n    }, {\r\n      content: 'Orange 10'\r\n    }, {\r\n      content: 'Orange 11'\r\n    }, {\r\n      content: 'Apple 12'\r\n    }, {\r\n      content: 'Orange 13'\r\n    }, {\r\n      content: 'Apple 14'\r\n    }];\r\n    $scope.filter1query = 'Orange';\r\n    $scope.filter2query = 'Orange';\r\n    $scope.filteredModel1 = [];\r\n    $scope.filteredModel2 = [];\r\n    $scope.getFilteredModel = function (filteredModel, items, filterQuery) {\r\n      filteredModel.length = 0;\r\n      /*\r\n      * Following one-liner is same like:\r\n      *   var filteredModelTemp = $filter('filter')(items, filterQuery);\r\n      *   angular.forEach(filteredModelTemp, function(item){\r\n      *     filteredModel.push(item);\r\n      *   });\r\n      * Or like:\r\n      *   var filteredModelTemp = $filter('filter')(items, filterQuery);\r\n      *   for(var i; i < filteredModelTemp.length; i++){\r\n      *     filteredModel.push(filteredModelTemp[i]);\r\n      *   }\r\n      *\r\n      * You cannot just assign filtered array to filteredModel like this:\r\n      *   filteredModel = $filter('filter')(items, filterQuery);\r\n      * Because you would replace the array object you provide to dragular with new one.\r\n      * So dragular will continue to use the one it was provided on init.\r\n      * Hopefully I make it clear. :)\r\n       */\r\n      [].push.apply(filteredModel, $filter('filter')(items, filterQuery));\r\n      return filteredModel;\r\n    };\r\n    var containers = $element.children().eq(1).children();\r\n    dragularService.cleanEnviroment();\r\n    dragularService([containers[0],containers[1]],{\r\n      containersModel: [$scope.items1, $scope.items2],\r\n      containersFilteredModel: [$scope.filteredModel1, $scope.filteredModel2]\r\n    });\r\n  }]);\r\n\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n  &lt;div class='wrapper' ng-controller=&quot;NgRepeatFilteredWithModel&quot;&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;input ng-model=&quot;filter1query&quot; style=&quot;margin:10px 10px&quot;&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;input ng-model=&quot;filter2query&quot; style=&quot;margin:10px 10px&quot;&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class='tableRow'&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in getFilteredModel(filteredModel1, items1, filter1query)&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in getFilteredModel(filteredModel2, items2, filter2query)&quot;&gt;{{item.content}}&lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Items1:\r\n          &lt;br/&gt;{{items1 | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;pre&gt;Items2:\r\n          &lt;br/&gt;{{items2 | json}}&lt;/pre&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleNgRepeatWithModel/exampleNgRepeatWithModel.html","<div class='parent'>\r\n  <h2>ngRepeat - with model</h2>\r\n  <label>Example of using ng-repeat with dragular and adding/removing items dynamicaly.</label>\r\n  <div class='wrapper' ng-controller=\"NgRepeatWithModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items\">\r\n          {{item.content}}\r\n          <button class='cursorDefault' ng-click=\"addItem()\">+</button>\r\n          <button class='cursorDefault' ng-click=\"removeItem()\">x</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <div>Items:\r\n          <br/>{{items | json}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <pre>\r\n    <code>\r\n  // HTML:\r\n   &lt;div class='wrapper' ng-controller=&quot;NgRepeatWithModel&quot;&gt;\r\n      &lt;div class='containerVertical'&gt;\r\n        &lt;div ng-repeat=&quot;item in items&quot;&gt;\r\n          {{item.content}}\r\n          &lt;button class='cursorDefault' ng-click=&quot;addItem()&quot;&gt;+&lt;/button&gt;\r\n          &lt;button class='cursorDefault' ng-click=&quot;removeItem()&quot;&gt;x&lt;/button&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n    </code>\r\n  </pre>\r\n  <pre>\r\n    <code>\r\n  // JS:\r\n  controller('NgRepeatWithModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items = [{\r\n      content: 'Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular.'\r\n    }, {\r\n      content: 'Item 2'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    dragularService($element.children().eq(0).children(), {containersModel: $scope.items});\r\n    $scope.addItem = function addItem() {\r\n      var index = $scope.items.indexOf(this.item) + 1;\r\n      $scope.items.splice(index, 0, {\r\n        content: this.item.content + '-copy'\r\n      });\r\n    };\r\n    $scope.removeItem = function removeItem() {\r\n      var index = $scope.items.indexOf(this.item);\r\n      $scope.items.splice(index, 1);\r\n    };\r\n  }])\r\n    </code>\r\n  </pre>\r\n</div>\r\n"),e.put("exampleRemoveOnSpillWithModel/exampleRemoveOnSpillWithModel.html","<div class='parent'>\r\n  <h2>Remove on spill - with model</h2>\r\n  <label>Need to be able to quickly delete stuff when it spills out of the chosen containers?</label>\r\n  <div class='wrapper' ng-controller=\"RemoveOnSpillWithModel\">\r\n    <div class='tableRow'>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tableRow\">\r\n      <div class='containerVertical'>\r\n        <pre>Items1:\r\n          <br/>{{items1 | json}}</pre>\r\n      </div>\r\n      <div class='containerVertical'>\r\n        <pre>Items2:\r\n          <br/>{{items2 | json}}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n   <pre>\r\n        <code>\r\n// JS\r\n  .controller('RemoveOnSpillWithModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\r\n    $scope.items1 = [{\r\n      content: 'Move me, but you can only drop me in containers.'\r\n    }, {\r\n      content: 'If you try to drop me somewhere other than containers, I\\'ll die a fiery death.'\r\n    }, {\r\n      content: 'Item 3'\r\n    }, {\r\n      content: 'Item 4'\r\n    }];\r\n    $scope.items2 = [{\r\n      content: 'You can drop me in the left container.'\r\n    }, {\r\n      content: 'Item 6'\r\n    }, {\r\n      content: 'Item 7'\r\n    }, {\r\n      content: 'Item 8'\r\n    }];\r\n    var containers = $element.children().eq(0).children();\r\n    dragularService.cleanEnviroment();\r\n    dragularService([containers[0],containers[1]],{\r\n      containersModel: [$scope.items1, $scope.items2],\r\n      removeOnSpill: true\r\n    });\r\n  }])\r\n        </code>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div class='wrapper' ng-controller=&quot;Basic&quot;&gt;\r\n    &lt;div class='tableRow'&gt;\r\n        &lt;div class='containerVertical'&gt;\r\n            &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class='containerVertical'&gt;\r\n            &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;tableRow&quot;&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div&gt;Items1:\r\n                &lt;br/&gt;{{items1 | json}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;container&quot;&gt;\r\n            &lt;div&gt;Items2:\r\n                &lt;br/&gt;{{items2 | json}}&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n</div>\r\n"),e.put("exampleRemoveOnSpill/exampleRemoveOnSpill.html","        <div class='parent'>\r\n            <h2>Remove on spill</h2>\r\n            <label>Need to be able to quickly delete stuff when it spills out of the chosen containers?</label>\r\n            <div class='wrapper' ng-controller=\"RemoveOnSpill\">\r\n                <div id='left' class='containerVertical'>\r\n                    <div>Move me, but you can only drop me in containers.</div>\r\n                    <div>If you try to drop me somewhere other than containers, I'll die a fiery death.</div>\r\n                    <div>Item 3.</div>\r\n                    <div>Item 6.</div>\r\n                    <div>Item 4.</div>\r\n                    <div>Item 5.</div>\r\n                </div>\r\n                <div id='right' class='containerVertical'>\r\n                    <div>You can drop me in the left container.</div>\r\n                    <div>Item 4.</div>\r\n                    <div>Item 5.</div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  dragularService([document.getElementById(single)], { removeOnSpill: true });\r\n        </code>\r\n      </pre>\r\n        </div>"),e.put("exampleRevertOnSpill/exampleRevertOnSpill.html","        <div class='parent'>\r\n            <h2>Revert on spill</h2>\r\n            <label>By default, dropping an element outside of any known containers will keep the element in the last place it hovered over. You can make elements go back home if they're dropped outside of known containers, too.</label>\r\n            <div class='wrapper' ng-controller=\"RevertOnSpill\">\r\n                <div id='left4' class='containerVertical'>\r\n                    <div>Move me, but you can only drop me in one of these containers.</div>\r\n                    <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\r\n                    <div>Item 3.</div>\r\n                    <div>Item 6.</div>\r\n                </div>\r\n                <div id='right4' class='containerVertical'>\r\n                    <div>You can drop me in the left container, otherwise I'll stay here.</div>\r\n                    <div>Item 4.</div>\r\n                    <div>Item 5.</div>\r\n                </div>\r\n            </div>\r\n            <pre>\r\n        <code>\r\n  dragularService([document.getElementById(left), document.getElementById(right)], { revertOnSpill: true });\r\n        </code>\r\n      </pre>\r\n        </div>"),
e.put("exampleScrollingDrag/exampleScrollingDrag.html",'<div class=\'parent\'>\r\n  <h2>Scrolling drag</h2>\r\n  <label> Containers can be scrolled by hovering up/down bar near containers. Bars on right side are transparent and moved a bit over containers. It can be scrolled also by mouse wheel.\r\n  </label>\r\n  <div ng-controller="ScrollingDrag">\r\n    <div class="containerVertical scrollingDrag">\r\n      <div class="scrollBar" id="leftTopBar">up</div>\r\n      <div id="leftScroll" class="scrollingDragInner">\r\n        <div>Item 1.</div>\r\n        <div>Item 2.</div>\r\n        <div>Item 3.</div>\r\n        <div>Item 4.</div>\r\n        <div>Item 5.</div>\r\n        <div>Item 6.</div>\r\n        <div>Item 7.</div>\r\n        <div>Item 9.</div>\r\n        <div>Item 10.</div>\r\n        <div>Item 11.</div>\r\n        <div>Item 12.</div>\r\n        <div>Item 13.</div>\r\n      </div>\r\n      <div class="scrollBar" id="leftBottomBar">down</div>\r\n    </div>\r\n    <div class="containerVertical scrollingDrag">\r\n      <div class="scrollBar" id="rightTopBar"></div>\r\n      <div id="rightScroll" class="scrollingDragInner">\r\n        <div>Item 1.</div>\r\n        <div>Item 2.</div>\r\n        <div>Item 3.</div>\r\n        <div>Item 4.</div>\r\n        <div>Item 5.</div>\r\n        <div>Item 6.</div>\r\n        <div>Item 7.</div>\r\n        <div>Item 9.</div>\r\n        <div>Item 10.</div>\r\n        <div>Item 11.</div>\r\n        <div>Item 12.</div>\r\n        <div>Item 13.</div>\r\n      </div>\r\n      <div class="scrollBar" id="rightBottomBar"></div>\r\n    </div>\r\n  </div>\r\n   <pre>\r\n        <code>\r\n// JS\r\ncontroller(\'ScrollingDrag\', [\'$interval\', \'$element\', \'dragularService\', function TodoCtrl($interval, $element, dragularService) {\r\n\r\n\r\n    var timer,\r\n      leftScrollContainer = document.getElementById(\'leftScroll\'),\r\n      rightScrollContainer = document.getElementById(\'rightScroll\'),\r\n      leftTopBar = document.getElementById(\'leftTopBar\'),\r\n      leftBottomBar = document.getElementById(\'leftBottomBar\'),\r\n      rightTopBar = document.getElementById(\'rightTopBar\'),\r\n      rightBottomBar = document.getElementById(\'rightBottomBar\');\r\n\r\n    dragularService.cleanEnviroment();\r\n    dragularService([leftScrollContainer, rightScrollContainer]);\r\n\r\n    registerEvents(leftTopBar, leftScrollContainer, -5);\r\n    registerEvents(leftBottomBar, leftScrollContainer, 5);\r\n    registerEvents(rightTopBar, rightScrollContainer, -5);\r\n    registerEvents(rightBottomBar, rightScrollContainer, 5);\r\n\r\n    function registerEvents(bar, container, inc, speed) {\r\n      if (!speed) {\r\n        speed = 20;\r\n      }\r\n      angular.element(bar).on(\'dragularenter\', function() {\r\n        container.scrollTop += inc;\r\n        timer = $interval(function moveScroll() {\r\n          container.scrollTop += inc;\r\n        }, speed);\r\n      });\r\n      angular.element(bar).on(\'dragularleave dragularrelease\', function() {\r\n        $interval.cancel(timer);\r\n      });\r\n    }\r\n  }])\r\n        </code>\r\n      </pre>\r\n      <pre>\r\n        <code>\r\n&lt;!-- HTML --&gt;\r\n&lt;div ng-controller=&quot;ScrollingDrag&quot;&gt;\r\n    &lt;div class=&quot;containerVertical scrollingDrag&quot;&gt;\r\n      &lt;div class=&quot;scrollBar&quot; id=&quot;leftTopBar&quot;&gt;up&lt;/div&gt;\r\n      &lt;div id=&quot;leftScroll&quot; class=&quot;scrollingDragInner&quot;&gt;\r\n        &lt;div&gt;Item 1&lt;/div&gt;\r\n        &lt;div&gt;Item 2&lt;/div&gt;\r\n            ...\r\n      &lt;/div&gt;\r\n      &lt;div class=&quot;scrollBar&quot; id=&quot;leftBottomBar&quot;&gt;down&lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;div class=&quot;containerVertical scrollingDrag&quot;&gt;\r\n      &lt;div class=&quot;scrollBar&quot; id=&quot;rightTopBar&quot;&gt;up&lt;/div&gt;\r\n      &lt;div id=&quot;rightScroll&quot; class=&quot;scrollingDragInner&quot;&gt;\r\n        &lt;div&gt;Item 1&lt;/div&gt;\r\n        &lt;div&gt;Item 2&lt;/div&gt;\r\n            ...\r\n      &lt;/div&gt;\r\n      &lt;div class=&quot;scrollBar&quot; id=&quot;rightBottomBar&quot;&gt;down&lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n        </code>\r\n      </pre>\r\n       <pre>\r\n        <code>\r\n// CSS\r\n.scrollingDrag {\r\n  width: 45%;\r\n  display: inline-block;\r\n}\r\n\r\n.scrollingDragInner {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n#rightTopBar,\r\n#rightBottomBar {\r\n  background: transparent;\r\n  position: relative;\r\n  height: 20px;\r\n}\r\n\r\n#rightTopBar {\r\n  top: 10px;\r\n}\r\n\r\n#rightBottomBar {\r\n  bottom: 10px;\r\n}\r\n\r\ndiv.scrollBar {\r\n  background: yellow;\r\n  text-align: center;\r\n  padding: 1px;\r\n}\r\n\r\n        </code>\r\n      </pre>\r\n</div>\r\n'),e.put("partials/partial-contribute.html",'<div class=\'container\'>\r\n  <div class="row">\r\n    <div class="col-lg-12">\r\n      <ng-include src="\'partials/autogenerated/contribute.html\'"> </ng-include>\r\n    </div>\r\n  </div>\r\n</div>\r\n'),e.put("partials/partial-docs.html",'<div class=\'container\'>\r\n  <div id="rowOffcanvas" class="row row-offcanvas row-offcanvas-left">\r\n    <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar">\r\n      <div class="list-group">\r\n        <a ng-repeat="example in examplesList" ng-click="toggleSidebar()" ui-sref="docs.detail({link:example.link})" ui-sref-active="active" class="list-group-item">{{example.title}}</a>\r\n      </div>\r\n    </div>\r\n    <!--/.sidebar-offcanvas-->\r\n    <div class="col-xs-12 col-sm-9">\r\n      <p class="pull-left visible-xs">\r\n        <button type="button" ng-click="toggleSidebar()" class="btn btn-primary btn-xs">Toggle nav</button>\r\n      </p>\r\n      <!-- docs.detail -->\r\n      <div ui-view onload="highlightCode()"></div>\r\n    </div>\r\n    <!--/.col-xs-12.col-sm-9-->\r\n  </div>\r\n  <!--/row-->\r\n</div>\r\n'),e.put("partials/partial-home.html",'<div class=\'container\'>\r\n  <div class="row">\r\n    <!--/.sidebar-offcanvas-->\r\n    <div class="col-lg-12">\r\n      <div class="jumbotron">\r\n        <h1>DRAGULAR</h1>\r\n        <p>Angular drag&drop based on <a href="http://github.com/bevacqua/dragula">dragula</a>.</p>\r\n        <p><a class="btn btn-primary btn-lg" ui-sref="docs" role="button">Live examples in docs</a></p>\r\n      </div>\r\n      <div class="row">\r\n        <div class="col-lg-12">\r\n          <p>Browser support includes every sane browser and **IE7+**. <sub>_(Granted you polyfill the functional `Array` methods in ES5)_</sub></p>\r\n          <h2>Inspiration</h2>\r\n          <p>I am working on huge angular project and I am using several drag&drop libraries in it, one for UI, one for lists, etc.. I want to use one full-featured drag&drop library for whole project. As I could not find any suitable, I decided to create one. I have choosen great library <a href="http://github.com/bevacqua/dragula">dragula</a> by <a href="https://github.com/bevacqua">Nicolas Bevacqua</a> as my starting point, make it more angular and started to put features in it! If you wish light-weight angular version of dragula, there is <a href="http://github.com/bevacqua/angular-dragula">official angular version of dragula</a>.</p>\r\n          <p><b>Actual version 4.4.6 is based on dragula 3.6.3 and tested with angular 1.5.5.</b></p>\r\n          <h2>Differences of dragular (against dragula)</h2>\r\n          <ul>\r\n            <li>replaced dragula crossvent with angulars event binding</li>\r\n            <li>replaced dragula contra.emitter with $scope.$emit if scope provided in options (options.scope)</li>\r\n            <li>provided as service or directive dragular where options can be passed via atribute dragular</li>\r\n            <li>automatic direction if not provided in options, instead of default vertical</li>\r\n            <li>accepting arraylike objects as containers array (jQuery, jQlite collections etc..)</li>\r\n            <li>accepting custom classes via option.classes</li>\r\n            <li>namespaced containers groups available via option.nameSpace (containers in same nameSpace cooperate)</li>\r\n            <li>boundingBox (dragging element can me moved only in specific area)</li>\r\n            <li>lockX/Y (dragging element can me moved only in specific direction)</li>\r\n            <li>DOM can be synced with scope model</li>\r\n            <li>support css selectors to define containers</li>\r\n            <li>added syntax highlighter to example codes</li>\r\n            <li>etc..</li>\r\n          </ul>\r\n          <h2>Todo</h2>\r\n          <ul>\r\n            <li>improve docs</li>\r\n          </ul>\r\n          <h2>Features</h2>\r\n          <ul>\r\n            <li>provided as service and also as directive</li>\r\n            <li>Super easy to set up</li>\r\n            <li>No bloated dependencies</li>\r\n            <li><strong>Figures out sort order</strong> on its own</li>\r\n            <li>A shadow where the item would be dropped offers <strong>visual feedback</strong></li>\r\n            <li>Touch events!</li>\r\n          </ul>\r\n          <h2>For installation, usage and examples go to <a ui-sref="docs">docs</a></h2>\r\n        </div>\r\n      </div>\r\n      <!--/row-->\r\n    </div>\r\n    <!--/.col-xs-12.col-sm-9-->\r\n  </div>\r\n  <!--/row-->\r\n</div>\r\n'),e.put("partials/autogenerated/contribute.html",'<h1 id="how-to-contribute">How to contribute</h1>\n<p>It&#39;s important to us that you feel you can contribute towards the evolution of Dragular. This can take many forms: from helping to fix bugs or improve the docs, to adding in new features to the source. This guide should help you in making that process as smooth as possible.</p>\n<p>Before contributing, please read the <a href="https://github.com/luckylooke/dragular/blob/master/CODE_OF_CONDUCT.md">code of conduct</a>.</p>\n<h2 id="reporting-issues">Reporting issues</h2>\n<p><a href="https://github.com/luckylooke/dragular/issues">GitHub Issues</a> is the place to report bugs you may have found in either the core library or any of the examples that are part of the repository. When submitting a bug please do the following:</p>\n<p><strong>1. Search for existing issues.</strong> Your bug may have already been fixed or addressed in a development branch version of Dragular, so be sure to search the issues first before putting in a duplicate issue.</p>\n<p><strong>2. Not sure if it&#39;s a bug?.</strong> Then please ask via issues and tag it [question].</p>\n<p><strong>3. Create an isolated and reproducible test case.</strong> If you are reporting a bug, make sure you also have a minimal, runnable, code example that reproduces the problem you have.</p>\n<p><strong>4. Include a live example.</strong> After narrowing your code down to only the problem areas, make use of <a href="http://codepen.io">Codepen</a>, <a href="http://jsbin.com/">jsBin</a>, or a link to your live site so that we can view a live example of the problem. (you can start by forking <a href="https://codepen.io/luckylooke/pen/pPmeWY">this codepen</a>)</p>\n<p><strong>5. Share as much information as possible.</strong> Include browser version affected, your OS, version of the library, steps to reproduce, etc. &quot;X isn&#39;t working!!!1!&quot; will probably just be closed.</p>\n<h2 id="dev-vs-master">Dev vs. Master</h2>\n<p>The dev branch of Dragular is our &#39;current working&#39; version. It is always ahead of the master branch in terms of features and fixes. However it&#39;s also bleeding-edge and experimental and we cannot and do not guarantee it will compile or work for you. Very often we have to break things for a few days while we rebuild and patch. So by all means please export the dev branch and contribute towards it, indeed that is where all Pull Requests should be sent, but do so understanding the API may change beneath you.</p>\n<h2 id="making-changes">Making Changes</h2>\n<p>To take advantage of our npm build script and jshint config it will be easiest for you if you have node.js installed locally.</p>\n<p>You can download node.js from <a href="http://nodejs.org">nodejs.org</a>.</p>\n<p>After that you can clone the repository and run <code>npm i</code> inside the cloned folder. This will install dependencies necessary for building the project. For development workflow automation dragular uses <code>gulp &gt;= 3.9.0</code>. Before starting development, make sure that <code>gulp</code> is installed on your machine globally: <code>npm i -g gulp</code>.</p>\n<h3 id="developing">Developing</h3>\n<p>There are several gulp tasks that are used for generating different builds:</p>\n<ul>\n<li><code>gulp dev</code> - Serves files with BrowserSync server, watches &amp; automatically refreshes connected browsers on changes, generates non-minified but concatenated styles &amp; scripts from the dragular source.</li>\n<li><code>gulp dev:docs</code> - Does exactly the same as <code>gulp dev</code>, except it works with the documentation source.</li>\n<li><code>gulp build</code> - Concatenates and minifies dragular source files.</li>\n<li><code>gulp build:docs</code> - Concatenates and minifies documentation source files.</li>\n</ul>\n<h3 id="linting">Linting</h3>\n<ul>\n<li><code>gulp lint</code> &amp; <code>gulp lint:docs</code> - Lint JavaScript files.</li>\n</ul>\n<h3 id="making-a-pull-request">Making a pull request</h3>\n<p>Once that is ready, make your changes and submit a Pull Request:</p>\n<ul>\n<li><p><strong>Send Pull Requests to the <code>dev</code> branch.</strong> All Pull Requests must be sent to the <code>dev</code> branch, <code>master</code> is the latest release and PRs to that branch will be closed.</p>\n</li>\n<li><p><strong>Ensure changes are jshint validated.</strong> Our JSHint configuration file is provided in the repository and you should check against it before submitting.</p>\n</li>\n<li><p><strong>Only commit relevant changes.</strong> Don&#39;t include changes that are not directly relevant to the fix you are making. The more focused a PR is, the faster it will get attention and be merged. Extra files changing only whitespace or trash files will likely get your PR closed.</p>\n</li>\n</ul>\n<p>Dependencies for building from source and running tests:</p>\n<h2 id="coding-style-preferences-are-not-contributions">Coding style preferences are not contributions</h2>\n<p>If your PR is doing little more than changing the Dragular source code into a format / coding style that you prefer then we will automatically close it. All PRs must adhere to the coding style already set-out across the lines of code in Dragular. Your personal preferences for how things should &quot;look&quot; or be structured do not apply here, sorry. PRs should fix bugs, fix documentation or add features. No changes for the sake of change.</p>\n<h2 id="i-don-t-really-like-git-node-js-but-i-can-fix-this-bug">I don&#39;t really like git / node.js, but I can fix this bug</h2>\n<p>That is fine too. While Pull Requests are the best thing in the world for us, they are not the only way to help. You&#39;re welcome to post fixes to our forum or even just email them to us. All we ask is that you still adhere to the guidelines presented here re: JSHint, etc.</p>\n')}])}])});
//# sourceMappingURL=examples.min.js.map
